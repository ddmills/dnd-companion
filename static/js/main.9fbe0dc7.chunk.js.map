{"version":3,"sources":["gql/GraphProvider.tsx","components/buttons/UnstyledButton.tsx","layout/AppHeader.tsx","components/spells/list/List.tsx","contexts/NavigationContext.tsx","data/Spells.tsx","models/SpellbookRepository.tsx","pages/home/HomePage.tsx","layout/PageHeader.tsx","contexts/SpellbooksContext.tsx","components/Screen.tsx","components/Dialog.tsx","data/PlayerClasses.tsx","util/LevelStringFriendly.tsx","pages/spellbooks/SpellbookCreate.tsx","util/ArrayUtils.tsx","util/IDGenerator.tsx","pages/spellbooks/SpellbookListPage.tsx","pages/spells/SpellPage.tsx","pages/spells/SpellRow.tsx","pages/spells/InfiniteSpellList.tsx","components/Drawer.tsx","contexts/SpellSearchContext.tsx","pages/spells/SpellsListFilter.tsx","pages/spells/SpellListPage.tsx","pages/spellbooks/SpellbookPage.tsx","pages/Routes.tsx","layout/AppThemeProvider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client","ApolloClient","uri","cache","InMemoryCache","GraphProvider","children","ApolloProvider","UnstyledButton","styled","button","LogoLink","Link","themeGet","BackBtn","AppHeader","history","useHistory","showBtn","useLocation","pathname","Box","bg","pl","pr","pt","pb","justifyContent","display","alignItems","fontWeight","onClick","goBack","StyledOcticon","icon","TriangleLeftIcon","size","to","RepoIcon","mr","ListItem","li","List","ul","NavigationContext","createContext","undefined","NavigationProvider","useState","selectedSpell","setSelectedSpell","state","scrollOffset","setScrollOffset","Provider","value","useNavigation","context","useContext","Error","spells","Map","data","forEach","datum","set","slug","getSpell","get","mapDataToSpellbook","spellbookId","name","classes","map","deleteAllSpellbooks","localStorage","clear","HomePageLink","HomePage","useEffect","flexDirection","as","p","StackIcon","Button","TrashIcon","PageHeader","boxShadow","Title","title","Heading","fontSize","Action","label","color","ActionButton","SpellbooksContext","SpellbooksProvider","spellbooks","setSpellbooks","books","i","len","length","key","startsWith","rawData","getItem","JSON","parse","book","push","repository","console","log","saveSpellbook","useCallback","spellbook","setItem","stringify","spell","idx","findIndex","s","clone","deleteSpellbook","removeItem","splice","getSpellbookById","find","useSpellbooks","useSpellbook","useParams","ScreenDiv","div","isOpen","Screen","onDismiss","close","e","stopPropagation","preventDefault","Dialog","DialogContainer","DialogContent","Header","playerClasses","levelFriendly","level","colorMap","abjuration","conjuration","divination","enchantment","evocation","illusion","necromancy","transmutation","getSpellSchoolColor","school","toLowerCase","capitalizeFirstLetter","str","charAt","toUpperCase","slice","SpellbookCreate","setName","selectedClasses","setSelectedClasses","onNameChange","target","toggleClass","includes","arr","element","indexOf","removeFromArray","isClassSelected","className","createSpellbook","Math","random","toString","substring","trim","mb","TextInput","placeholder","onChange","width","Text","ClassGrid","playerClass","ClassCell","isSelected","mt","ButtonPrimary","disabled","SpellbookRow","SpellbookListPage","isModalOpen","setIsModalOpen","PlusIcon","join","renderPart","SpellPage","notFound","BookmarkFillIcon","ml","Flash","variant","AlertIcon","castingTime","duration","range","components","concentration","ritual","description","desc","text","endsWith","higherLevelDesc","Card","SpellRow","mods","borderBottom","some","inSpellbook","DashIcon","Row","index","style","SpellListContainer","InfiniteSpellList","containerRef","useRef","listRef","useResizeDetector","targetRef","height","current","scrollTo","handleScroll","ref","onScroll","itemCount","itemData","itemSize","DrawerContent","Drawer","SpellSearchContext","SpellSearchProvider","textFilter","setTextFilter","Set","classFilter","setClassFilterState","levelFilter","setLevelFilter","setClassFilter","newClassFilter","removeClass","delete","addLevel","newLevelFilter","add","removeLevel","hasClassFilter","hasLevelFilter","hasTextFilter","addClass","hasFilter","apply","textFilterLower","filter","c","has","useSpellSearch","TitleBar","CloseButton","SpellLevelGrid","SpellLevelCell","spellLevels","SpellsListFilter","isLevelSelected","handleTextFilterChange","overflow","SearchIcon","XIcon","spellLevel","SpellListPage","Array","from","values","isFilterDrawerOpen","setIsFilterDrawerOpen","sort","s1","s2","theme","useTheme","showFilter","hideDrawer","colors","accent","emphasis","flex","SpellbookPage","goToAddSpellsPage","Routes","basename","process","overflowY","path","AppThemeProvider","ThemeProvider","colorMode","nightScheme","Base","BaseStyles","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fbe0dc7.chunk.js","sourcesContent":["import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'https://www.dnd5eapi.co/graphql',\n    cache: new InMemoryCache(),\n});\n\ninterface GraphProviderProps {\n    children?: React.ReactNode;\n}\n\nexport const GraphProvider = ({ children }: GraphProviderProps) => (\n    <ApolloProvider client={client}>{children}</ApolloProvider>\n);\n","import styled from 'styled-components';\n\nexport const UnstyledButton = styled.button`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    border: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n`;\n","import { Box, themeGet, StyledOcticon } from '@primer/components';\nimport { TriangleLeftIcon, RepoIcon } from '@primer/octicons-react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { UnstyledButton } from '../components/buttons/UnstyledButton';\nimport styled from 'styled-components';\n\nconst LogoLink = styled(Link)`\n    font-weight: bold;\n    text-decoration: inherit;\n    color: ${themeGet('colors.fg.subtle')};\n`;\n\nconst BackBtn = styled(UnstyledButton)`\n    position: absolute;\n    left: 8px;\n    top: 8px;\n    color: ${themeGet('colors.fg.default')};\n    display: inline-flex;\n    align-items: center;\n`;\n\nexport const AppHeader = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const showBtn = location.pathname !== '/';\n\n    return (\n        <Box\n            bg=\"#171c23\"\n            pl={4}\n            pr={4}\n            pt={2}\n            pb={2}\n            justifyContent=\"center\"\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={500}\n        >\n            {showBtn && (\n                <BackBtn onClick={() => history.goBack()}>\n                    <StyledOcticon icon={TriangleLeftIcon} size={17} />\n                    <span>Back</span>\n                </BackBtn>\n            )}\n            <LogoLink to=\"/\">\n                <StyledOcticon icon={RepoIcon} size={16} mr={1} />\n                <span>D&D Companion</span>\n            </LogoLink>\n        </Box>\n    );\n};\n","import { themeGet } from '@primer/components';\nimport styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    border-bottom: 1px solid ${themeGet('colors.border.muted')};\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`;\n","import {\n    createContext,\n    ReactNode,\n    useContext,\n    useState,\n} from 'react';\nimport { Spell } from '../models/Spell';\n\ninterface NavigationState {\n    selectedSpell?: Spell;\n    setSelectedSpell: (spell: Spell | undefined) => void;\n    scrollOffset?: number;\n    setScrollOffset: (scrollOffset: number) => void;\n}\n\nconst NavigationContext = createContext<NavigationState | undefined>(undefined);\n\ninterface NavigationProviderProps {\n    children?: ReactNode;\n}\n\nexport const NavigationProvider = ({ children }: NavigationProviderProps) => {\n    const [selectedSpell, setSelectedSpell] = useState<Spell>();\n    const [scrollOffset, setScrollOffset] = useState<number>(0);\n\n    const state = {\n        selectedSpell,\n        setSelectedSpell,\n        scrollOffset,\n        setScrollOffset,\n    };\n\n    return (\n        <NavigationContext.Provider value={state}>\n            {children}\n        </NavigationContext.Provider>\n    );\n};\n\nexport const useNavigation = () => {\n    const context = useContext(NavigationContext);\n\n    if (context === undefined) {\n        throw new Error(\n            'useNavigation must be used within a NavigationContextProvider'\n        );\n    }\n\n    return context;\n};\n","import { Spell } from '../models/Spell';\nimport data from './spells.json';\n\nconst spells = new Map<string, Spell>();\n\ndata.forEach((datum) => {\n    spells.set(datum.slug, datum);\n});\n\nexport const getSpell = (slug: string): Spell | undefined => spells.get(slug);\nexport const getSpells = (): Spell[] => Array.from(spells.values());\n","import { getSpell } from '../data/Spells';\nimport { Spell } from './Spell';\nimport { Spellbook } from './Spellbook';\n\nconst mapDataToSpellbook = (data: any): Spellbook => ({\n    spellbookId: data.spellbookId,\n    name: data.name,\n    classes: data.classes,\n    spells: data.spells?.map((slug: string) => getSpell(slug)) || [],\n});\n\nexport const saveSpellbook = (book: Spellbook) => {\n    const key = `book-${book.spellbookId}`;\n\n    localStorage.setItem(\n        key,\n        JSON.stringify({\n            spellbookId: book.spellbookId,\n            name: book.name,\n            classes: book.classes,\n            spells: book.spells?.map((spell: Spell) => spell.slug) || [],\n        })\n    );\n};\n\nexport const deleteSpellbook = (book: Spellbook) => {\n    const key = `book-${book.spellbookId}`;\n\n    localStorage.removeItem(key);\n};\n\nexport const deleteAllSpellbooks = () => {\n    localStorage.clear();\n};\n\nexport const getSpellbooks = (): Spellbook[] => {\n    const books = [];\n\n    for (let i = 0, len = localStorage.length; i < len; ++i) {\n        const key = localStorage.key(i);\n\n        if (key?.startsWith('book-')) {\n            const rawData = localStorage.getItem(key);\n\n            if (rawData) {\n                const data = JSON.parse(rawData);\n                const book = mapDataToSpellbook(data);\n\n                books.push(book);\n            }\n        }\n    }\n\n    return books;\n};\n","import { Box, Button, StyledOcticon } from '@primer/components';\nimport { RepoIcon, StackIcon, TrashIcon } from '@primer/octicons-react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { List, ListItem } from '../../components/spells/list/List';\nimport { useNavigation } from '../../contexts/NavigationContext';\nimport { deleteAllSpellbooks } from '../../models/SpellbookRepository';\n\nconst HomePageLink = styled(Box)`\n    display: block;\n    color: inherit;\n    width: 100%;\n    text-decoration: inherit;\n    text-align: left;\n    font-size: 18px;\n    font-weight: inherit;\n    background-color: inherit;\n    border: none;\n    border-radius: 0;\n\n    &:active,\n    &:hover {\n        background-color: #eee;\n    }\n`;\n\nexport const HomePage = () => {\n    const {setSelectedSpell} = useNavigation();\n\n    useEffect(() => {\n        setSelectedSpell(undefined);\n    }, [setSelectedSpell]);\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <List>\n                <ListItem>\n                    <HomePageLink as={Link} to=\"/spellbooks\" p={4}>\n                        <StyledOcticon icon={StackIcon} size={24} mr={3} />\n                        Spellbooks\n                    </HomePageLink>\n                </ListItem>\n                <ListItem>\n                    <HomePageLink as={Link} to=\"/spells\" p={4}>\n                        <StyledOcticon icon={RepoIcon} size={24} mr={3} />\n                        Spell reference\n                    </HomePageLink>\n                </ListItem>\n                <ListItem>\n                    <HomePageLink as={Button} onClick={deleteAllSpellbooks} p={4}>\n                        <StyledOcticon icon={TrashIcon} size={24} mr={3} />\n                        Delete all spellbooks\n                    </HomePageLink>\n                </ListItem>\n            </List>\n        </Box>\n    );\n};\n","import { Box, Heading, StyledOcticon, themeGet } from '@primer/components';\nimport styled from 'styled-components';\nimport { UnstyledButton } from '../components/buttons/UnstyledButton';\n\ninterface PageHeaderProps {\n    children?: React.ReactNode;\n}\n\nexport const PageHeader = ({ children }: PageHeaderProps) => (\n    <Box\n        bg=\"canvas.inset\"\n        boxShadow=\"shadow.small\"\n        display=\"flex\"\n        justifyContent=\"space-between\"\n    >\n        {children}\n    </Box>\n);\n\ninterface PageHeaderTitleProps {\n    icon?: React.ElementType;\n    title: string;\n}\n\nPageHeader.Title = ({ icon, title }: PageHeaderTitleProps) => (\n    <Heading fontSize={3} fontWeight={600} p={4}>\n        {icon && <StyledOcticon icon={icon} size={24} mr={1} />}\n        <span>{title}</span>\n    </Heading>\n);\n\ninterface PageHeaderActionProp {\n    icon?: React.ElementType;\n    label: string;\n    onClick?: () => void;\n    color?: any;\n}\n\nPageHeader.Action = ({ icon, label, onClick, color }: PageHeaderActionProp) => (\n    <ActionButton onClick={onClick}>\n        {icon && (\n            <StyledOcticon\n                color={color}\n                icon={icon}\n                size={24}\n                aria-label={label}\n            />\n        )}\n    </ActionButton>\n);\n\nconst ActionButton = styled(UnstyledButton)`\n    padding: 24px;\n    &:active {\n        background-color: ${themeGet('colors.canvas.subtle')};\n    }\n`;\n","import { Spellbook } from '../models/Spellbook';\nimport {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useEffect,\n    useState,\n} from 'react';\nimport * as repository from '../models/SpellbookRepository';\nimport { useParams } from 'react-router';\n\ninterface SpellbooksState {\n    spellbooks: Spellbook[];\n\n    saveSpellbook: (book: Spellbook) => void;\n    deleteSpellbook: (book: Spellbook) => void;\n    getSpellbookById: (spellbookId: string) => Spellbook | undefined;\n}\n\nconst SpellbooksContext = createContext<SpellbooksState | undefined>(undefined);\n\ninterface SpellbooksProviderProps {\n    children?: ReactNode;\n}\n\nexport const SpellbooksProvider = ({ children }: SpellbooksProviderProps) => {\n    const [spellbooks, setSpellbooks] = useState<Spellbook[]>([]);\n\n    useEffect(() => {\n        const books = repository.getSpellbooks();\n\n        console.log('LOAD SPELLBOOKS');\n\n        setSpellbooks(books);\n    }, []);\n\n    const saveSpellbook = useCallback(\n        (spellbook: Spellbook) => {\n            repository.saveSpellbook(spellbook);\n            const idx = spellbooks.findIndex(\n                (s) => s.spellbookId === spellbook.spellbookId\n            );\n            const clone = [...spellbooks];\n\n            if (idx >= 0) {\n                clone[idx] = spellbook;\n            } else {\n                clone.push(spellbook);\n            }\n\n            setSpellbooks(clone);\n        },\n        [setSpellbooks, spellbooks]\n    );\n\n    const deleteSpellbook = useCallback(\n        (spellbook: Spellbook) => {\n            repository.deleteSpellbook(spellbook);\n            const idx = spellbooks.findIndex(\n                (s) => s.spellbookId === spellbook.spellbookId\n            );\n            const clone = [...spellbooks];\n\n            if (idx >= 0) {\n                clone.splice(idx, 1);\n            }\n\n            setSpellbooks(clone);\n        },\n        [setSpellbooks, spellbooks]\n    );\n\n    const getSpellbookById = useCallback(\n        (spellbookId: string) => {\n            return spellbooks.find((s) => s.spellbookId === spellbookId);\n        },\n        [spellbooks]\n    );\n\n    const state = {\n        spellbooks,\n        saveSpellbook,\n        deleteSpellbook,\n        getSpellbookById,\n    };\n\n    return (\n        <SpellbooksContext.Provider value={state}>\n            {children}\n        </SpellbooksContext.Provider>\n    );\n};\n\nexport const useSpellbooks = () => {\n    const context = useContext(SpellbooksContext);\n\n    if (context === undefined) {\n        throw new Error(\n            'useSpellbooks must be used within a SpellbooksContextProvider'\n        );\n    }\n\n    return context;\n};\n\ninterface SpellbookIdParam {\n    spellbookId?: string;\n}\n\nexport const useSpellbook = (): Spellbook | void => {\n    const { spellbookId } = useParams<SpellbookIdParam>();\n    const { getSpellbookById } = useSpellbooks();\n\n    if (spellbookId) {\n        const spellbook = getSpellbookById(spellbookId);\n\n        return spellbook;\n    }\n\n    return undefined;\n};\n","import { useCallback } from 'react';\nimport styled from 'styled-components';\n\nconst ScreenDiv = styled.div<{ isOpen: boolean }>`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    transition: background-color 0.5s ease;\n    backdrop-filter: background-color 0.5s ease;\n\n    background-color: ${({ isOpen }) => (isOpen ? '#00000066' : '00000000')};\n    pointer-events: ${({ isOpen }) => (isOpen ? 'all' : 'none')};\n    backdrop-filter: ${({ isOpen }) => (isOpen ? 'blur(1px)' : 'none')};\n`;\n\ninterface ScreenProps {\n    children?: React.ReactNode;\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const Screen = ({ isOpen, onDismiss, children }: ScreenProps) => {\n    const close = useCallback(\n        (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            onDismiss();\n        },\n        [onDismiss]\n    );\n\n    return (\n        <ScreenDiv isOpen={isOpen} onClick={close}>\n            {children}\n        </ScreenDiv>\n    );\n};\n","import { Box, Heading, StyledOcticon, themeGet } from '@primer/components';\nimport styled from 'styled-components';\nimport { Screen } from './Screen';\n\ninterface DialogProps {\n    children?: React.ReactNode;\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const Dialog = ({ isOpen, onDismiss, children }: DialogProps) => (\n    <>\n        <Screen isOpen={isOpen} onDismiss={onDismiss} />\n        <DialogContainer isOpen={isOpen}>\n            <DialogContent isOpen={isOpen}>{children}</DialogContent>\n        </DialogContainer>\n    </>\n);\n\ninterface DialogHeaderProps {\n    icon?: React.ElementType;\n    title: string;\n}\n\nDialog.Header = ({ icon, title }: DialogHeaderProps) => (\n    <Box bg=\"canvas.inset\">\n        <Heading fontSize={2} fontWeight={600} p={4}>\n            {icon && <StyledOcticon icon={icon} size={18} mr={1} />}\n            <span>{title}</span>\n        </Heading>\n    </Box>\n);\n\nconst DialogContainer = styled.div<{ isOpen: boolean }>`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nconst DialogContent = styled.div<{ isOpen: boolean }>`\n    pointer-events: all;\n    background-color: ${themeGet('colors.canvas.default')};\n    border-radius: 0.5rem;\n\n    max-width: 320px;\n    width: 90%;\n    min-height: 120px;\n\n    margin-top: 80px;\n\n    transition: box-shadow 0.15s ease;\n\n    box-shadow: ${({ isOpen }) =>\n        isOpen ? 'rgb(12 15 21 / 73%) 5px 5px 16px 1px' : 'none'};\n    display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n    overflow: hidden;\n`;\n","export const playerClasses = [\n    'bard',\n    'cleric',\n    'druid',\n    'paladin',\n    'ranger',\n    'sorcerer',\n    'warlock',\n    'wizard',\n];\n","export const levelFriendly = (level: number): string => {\n    if (level === 0) {\n        return '0';\n    }\n\n    if (level === 1) {\n        return '1st';\n    }\n\n    if (level === 2) {\n        return '2nd';\n    }\n\n    if (level === 3) {\n        return '3rd';\n    }\n\n    return `${level}th`;\n};\n\nconst colorMap: { [key: string]: string } = {\n    abjuration: '#f0d95e',\n    conjuration: '#a7b945',\n    divination: '#e7f4f3',\n    enchantment: '#f2f09f',\n    evocation: '#d14444',\n    illusion: '#b55db5',\n    necromancy: '#77c977',\n    transmutation: '#52b8e0',\n};\n\nexport const getSpellSchoolColor = (school?: string): string =>\n    (school && colorMap[school?.toLowerCase()]) ?? 'inherit';\n\nexport const capitalizeFirstLetter = (str: string): string =>\n    str.charAt(0).toUpperCase() + str.slice(1);\n","import {\n    Box,\n    Text,\n    ButtonPrimary,\n    TextInput,\n    themeGet,\n} from '@primer/components';\nimport { StackIcon } from '@primer/octicons-react';\nimport { useCallback, useState } from 'react';\nimport { Dialog } from '../../components/Dialog';\nimport { playerClasses } from '../../data/PlayerClasses';\nimport { capitalizeFirstLetter } from '../../util/LevelStringFriendly';\nimport styled from 'styled-components';\nimport { removeFromArray } from '../../util/ArrayUtils';\nimport { useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { generateId } from '../../util/IDGenerator';\n\ninterface SpellbookCreateProps {\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const SpellbookCreate = ({\n    isOpen,\n    onDismiss,\n}: SpellbookCreateProps) => {\n    const [name, setName] = useState('');\n    const [selectedClasses, setSelectedClasses] = useState<string[]>([]);\n    const { saveSpellbook } = useSpellbooks();\n\n    const onNameChange = useCallback(\n        (e: any) => {\n            setName(e.target.value);\n        },\n        [setName]\n    );\n\n    const toggleClass = useCallback(\n        (name) => {\n            if (selectedClasses.includes(name)) {\n                setSelectedClasses(\n                    removeFromArray<string>(selectedClasses, name)\n                );\n            } else {\n                setSelectedClasses([...selectedClasses, name]);\n            }\n        },\n        [selectedClasses, setSelectedClasses]\n    );\n\n    const isClassSelected = useCallback(\n        (className: string) => selectedClasses.includes(className),\n        [selectedClasses]\n    );\n\n    const createSpellbook = useCallback(() => {\n        saveSpellbook({\n            spellbookId: generateId(),\n            name: name.trim(),\n            classes: [...selectedClasses],\n            spells: [],\n        });\n        onDismiss();\n    }, [name, selectedClasses, saveSpellbook, onDismiss]);\n\n    return (\n        <Dialog isOpen={isOpen} onDismiss={onDismiss}>\n            <Dialog.Header icon={StackIcon} title=\"Create spellbook\" />\n            <Box p={3}>\n                <Box mb={3}>\n                    <TextInput\n                        aria-label=\"Spellbook name\"\n                        name=\"spellbok-name\"\n                        placeholder=\"Spellbook name\"\n                        value={name}\n                        onChange={onNameChange}\n                        width=\"100%\"\n                    />\n                </Box>\n                <Text pb={2} display=\"block\" fontWeight=\"600\">\n                    Classes\n                </Text>\n                <ClassGrid>\n                    {playerClasses.map((playerClass) => (\n                        <ClassCell\n                            key={playerClass}\n                            isSelected={isClassSelected(playerClass)}\n                            onClick={() => toggleClass(playerClass)}\n                        >\n                            {capitalizeFirstLetter(playerClass)}\n                        </ClassCell>\n                    ))}\n                </ClassGrid>\n                <Box display=\"flex\" mt={3} justifyContent=\"flex-end\">\n                    <ButtonPrimary\n                        disabled={name.trim().length <= 0}\n                        onClick={createSpellbook}\n                    >\n                        Create\n                    </ButtonPrimary>\n                </Box>\n            </Box>\n        </Dialog>\n    );\n};\n\nconst ClassGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 8px;\n    height: 240px;\n    grid-row-gap: 8px;\n    margin-bottom: 16px;\n`;\n\ninterface ClassCellProps {\n    isSelected: boolean;\n}\n\nconst ClassCell = styled.button<ClassCellProps>`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n\n    background-color: ${themeGet('colors.canvas.subtle')};\n    border: 3px solid transparent;\n    border-color: ${({ isSelected }) =>\n        isSelected ? themeGet('colors.accent.emphasis') : 'transparent'};\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.25rem;\n`;\n","export const removeFromArray = <T extends unknown>(\n    arr: T[],\n    element: T\n): T[] => {\n    const idx = arr.indexOf(element);\n\n    if (idx >= 0) {\n        const clone = [...arr];\n\n        clone.splice(idx, 1);\n\n        return clone;\n    }\n\n    return arr;\n};\n","export const generateId = (): string =>\n    Math.random().toString(36).substring(2, 9);\n","import { Box, Text } from '@primer/components';\nimport { PlusIcon, StackIcon } from '@primer/octicons-react';\nimport { useState } from 'react';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { SpellbookCreate } from './SpellbookCreate';\nimport { List, ListItem } from '../../components/spells/list/List';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst SpellbookRow = styled(Box)`\n    text-decoration: none;\n    color: inherit;\n`;\n\nexport const SpellbookListPage = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const { spellbooks } = useSpellbooks();\n\n    return (\n        <>\n            <PageHeader>\n                <PageHeader.Title icon={StackIcon} title=\"Spellbooks\" />\n                <PageHeader.Action\n                    icon={PlusIcon}\n                    label=\"Create spellbook\"\n                    onClick={() => setIsModalOpen(true)}\n                />\n            </PageHeader>\n            <Box display=\"flex\" flexDirection=\"column\">\n                <List>\n                    {spellbooks.map((book) => (\n                        <ListItem key={book.spellbookId}>\n                            <SpellbookRow\n                                p={3}\n                                as={Link}\n                                to={`/spellbook/${book.spellbookId}`}\n                                display=\"block\"\n                            >\n                                <Box\n                                    display=\"flex\"\n                                    justifyContent=\"space-between\"\n                                >\n                                    <Text fontSize={2} fontWeight={600}>\n                                        {book.name}\n                                    </Text>\n                                    <Text fontSize={1} color=\"#6e7b8a\">\n                                        {book.spells.length} spells\n                                    </Text>\n                                </Box>\n                                <Box>\n                                    <Text fontSize={1} color=\"#6e7b8a\">\n                                        {book.classes.join(', ')}\n                                    </Text>\n                                </Box>\n                            </SpellbookRow>\n                        </ListItem>\n                    ))}\n                </List>\n            </Box>\n            <SpellbookCreate\n                isOpen={isModalOpen}\n                onDismiss={() => setIsModalOpen(false)}\n            />\n        </>\n    );\n};\n","import { Box, Flash, Heading, StyledOcticon, Text } from '@primer/components';\nimport { AlertIcon, BookmarkFillIcon } from '@primer/octicons-react';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { useParams } from 'react-router';\nimport { getSpellSchoolColor } from '../../util/LevelStringFriendly';\nimport { getSpell } from '../../data/Spells';\nimport { useNavigation } from '../../contexts/NavigationContext';\nimport { useEffect } from 'react';\n\ninterface SpellPageParams {\n    slug: string;\n}\n\nconst renderPart = (label?: string, value?: string) => {\n    if (!value) {\n        return;\n    }\n\n    return (\n        <Box>\n            <Text fontWeight=\"bold\" display=\"inline\">\n                {label}:\n            </Text>\n            <Text display=\"inline\"> {value}</Text>\n        </Box>\n    );\n};\n\nconst isSpellMinorHeading = (text: string): boolean => {\n    return text.length < 24 && !text.startsWith('-') && text.endsWith('.');\n};\n\nexport const SpellPage = () => {\n    const { slug } = useParams<SpellPageParams>();\n    const spell = getSpell(slug);\n    const { setSelectedSpell } = useNavigation();\n    const notFound = !spell;\n\n    useEffect(() => {\n        setSelectedSpell(spell);\n    }, [spell, setSelectedSpell]);\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <PageHeader>\n                <PageHeader.Title\n                    icon={BookmarkFillIcon}\n                    title={notFound ? 'Not found' : spell.name}\n                />\n            </PageHeader>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                mt={3}\n                ml={4}\n                mr={4}\n                mb={4}\n            >\n                {notFound ? (\n                    <Flash variant=\"danger\">\n                        <StyledOcticon icon={AlertIcon} />\n                        <Text fontWeight={400}>Spell not found</Text>\n                    </Flash>\n                ) : (\n                    <>\n                        <Heading\n                            fontSize={3}\n                            mb={3}\n                            color={getSpellSchoolColor(spell.school)}\n                        >\n                            Level {spell.level}{' '}\n                            <Text>{spell.school?.toLowerCase()}</Text>\n                        </Heading>\n                        {renderPart('Casting time', spell.castingTime)}\n                        {renderPart('Duration', spell.duration)}\n                        {renderPart('Range', spell.range)}\n                        {renderPart('Components', spell.components?.join(', '))}\n                        {renderPart(\n                            'Concentration',\n                            spell.concentration ? 'yes' : 'no'\n                        )}\n                        {renderPart('Ritual', spell.ritual ? 'yes' : 'no')}\n                        {renderPart('Classes', spell.classes.join(', '))}\n\n                        <Box\n                            display=\"flex\"\n                            flexDirection=\"column\"\n                            mt={3}\n                            mb={3}\n                        >\n                            {spell.description.map((desc, idx) => (\n                                <Text\n                                    mb={2}\n                                    key={idx}\n                                    fontWeight={\n                                        isSpellMinorHeading(desc) ? 700 : 400\n                                    }\n                                >\n                                    {desc}\n                                </Text>\n                            ))}\n                        </Box>\n\n                        {spell.higherLevelDesc?.length! > 0 && (\n                            <>\n                                <Text fontWeight=\"bold\" display=\"inline\">\n                                    Higher level:\n                                </Text>\n                                <Box\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    mt={2}\n                                    mb={4}\n                                >\n                                    {spell.higherLevelDesc?.map((desc, idx) => (\n                                        <Text mb={2} key={idx}>\n                                            {desc}\n                                        </Text>\n                                    ))}\n                                </Box>\n                            </>\n                        )}\n                    </>\n                )}\n            </Box>\n        </Box>\n    );\n};\n","import { Box, StyledOcticon, Text, themeGet } from '@primer/components';\nimport { PlusIcon, DashIcon } from '@primer/octicons-react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { UnstyledButton } from '../../components/buttons/UnstyledButton';\nimport { useSpellbook, useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { Spell } from '../../models/Spell';\nimport {\n    getSpellSchoolColor,\n    levelFriendly,\n} from '../../util/LevelStringFriendly';\n\nconst Card = styled(Box)`\n    display: block;\n    flex: 1 1 auto;\n    color: inherit;\n    text-decoration: inherit;\n\n    &:last-child {\n        padding-right: 24px;\n    }\n\n    &:active,\n    &:hover {\n        background-color: ${themeGet('border.muted')};\n    }\n`;\n\ninterface SpellRowProps {\n    spell: Spell;\n}\n\nexport const SpellRow = ({ spell }: SpellRowProps) => {\n    const spellbook = useSpellbook();\n    const { saveSpellbook } = useSpellbooks();\n    const mods = [];\n\n    if (spell.ritual) {\n        mods.push('rit');\n    }\n\n    if (spell.concentration) {\n        mods.push('con');\n    }\n\n    const inSpellbook = (spell: Spell): boolean => {\n        return spellbook!.spells.some((s) => s.name === spell.name);\n    };\n\n    return (\n        <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            borderBottom=\"1px solid #343940\"\n        >\n            <Card\n                as={Link}\n                to={`/spell/${spell.slug}`}\n                pl={4}\n                pt={3}\n                pb={3}\n                display=\"block\"\n            >\n                <Box display=\"flex\" justifyContent=\"space-between\">\n                    <Text fontSize={2} fontWeight={600}>\n                        {spell.name}\n                    </Text>\n                    {mods.length > 0 && (\n                        <Text fontSize={1}>({mods.join(', ')})</Text>\n                    )}\n                </Box>\n                <Box>\n                    <Text fontSize={1}>\n                        {levelFriendly(spell.level)} level\n                        <Text color={getSpellSchoolColor(spell.school)}>\n                            {' ' + spell.school.toLowerCase()}\n                        </Text>\n                        <Text color=\"#6e7b8a\">\n                            {' [' + spell.components.join(', ')}]\n                        </Text>\n                    </Text>\n                </Box>\n                {/* <Box>\n                    <Text fontSize={1} color=\"#6e7b8a\">\n                        <Truncate title={spell.classes.join(', ')} maxWidth=\"100%\">\n                            {spell.classes.join(', ')}\n                        </Truncate>\n                    </Text>\n                </Box> */}\n            </Card>\n            {spellbook && (\n                <Box p={2} display=\"flex\">\n                    {inSpellbook(spell) ? (\n                        <UnstyledButton\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                e.preventDefault();\n\n                                const idx = spellbook.spells.findIndex(\n                                    (s) => s.name === spell.name\n                                );\n                                spellbook.spells.splice(idx, 1);\n                                saveSpellbook(spellbook);\n                            }}\n                        >\n                            <Box p={2}>\n                                <StyledOcticon icon={DashIcon} size={24} />\n                            </Box>\n                        </UnstyledButton>\n                    ) : (\n                        <UnstyledButton\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                e.preventDefault();\n\n                                spellbook.spells.push(spell);\n                                saveSpellbook(spellbook);\n                            }}\n                        >\n                            <Box p={2}>\n                                <StyledOcticon icon={PlusIcon} size={24} />\n                            </Box>\n                        </UnstyledButton>\n                    )}\n                </Box>\n            )}\n        </Box>\n    );\n};\n","import { useCallback, useEffect, useRef } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport styled from 'styled-components';\nimport { Spell } from '../../models/Spell';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { SpellRow } from './SpellRow';\nimport { useNavigation } from '../../contexts/NavigationContext';\n\ninterface RowProps {\n    index: number;\n    style: any;\n    data: Spell[];\n}\n\nconst Row = ({ index, style, data }: RowProps) => {\n    const spell = data[index];\n\n    return (\n        <div style={style}>\n            <SpellRow spell={spell} />\n        </div>\n    );\n};\n\ninterface InfiniteSpellListProps {\n    spells: Spell[];\n    selectedSpell?: Spell;\n}\n\nconst SpellListContainer = styled.div`\n    height: 100%;\n`;\n\nexport const InfiniteSpellList = ({ spells, selectedSpell }: InfiniteSpellListProps) => {\n    const containerRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n    const listRef = useRef() as React.MutableRefObject<FixedSizeList>;\n    const { width, height } = useResizeDetector({ targetRef: containerRef });\n    const { scrollOffset, setScrollOffset } = useNavigation();\n\n    useEffect(() => {\n        if (selectedSpell) {\n            const selectedIdx = spells.findIndex((s) => s.slug === selectedSpell.slug);\n\n            if (selectedIdx > 0 && scrollOffset) {\n                listRef.current?.scrollTo(scrollOffset);\n            }\n        }\n    }, [selectedSpell, scrollOffset, spells]);\n\n    const handleScroll = useCallback((e) => {\n        if (e.scrollOffset !== scrollOffset && e.scrollOffset > 0) {\n            setScrollOffset(e.scrollOffset);\n        }\n    }, [scrollOffset, setScrollOffset]);\n\n    return (\n        <SpellListContainer ref={containerRef}>\n            <FixedSizeList\n                // @ts-ignore\n                ref={listRef}\n                onScroll={handleScroll}\n                width={width ?? 320}\n                height={height ?? 300}\n                itemCount={spells.length}\n                itemData={spells}\n                itemSize={81}\n            >\n                {Row}\n            </FixedSizeList>\n        </SpellListContainer>\n    );\n};\n","import { themeGet } from '@primer/components';\nimport styled from 'styled-components';\nimport { Screen } from './Screen';\n\nconst DrawerContent = styled.div<{ isOpen: boolean }>`\n    background-color: ${themeGet('colors.canvas.inset')};\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    height: 100%;\n    max-width: 320px;\n    width: 90%;\n    box-shadow: rgb(10 11 13) 0px 8px 24px\n\n    transition: right 0.15s ease;\n\n    right: ${({ isOpen }) => (isOpen ? '0' : '-100%')};\n`;\n\ninterface DrawerProps {\n    children?: React.ReactNode;\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const Drawer = ({ children, isOpen, onDismiss }: DrawerProps) => (\n    <>\n        <Screen isOpen={isOpen} onDismiss={onDismiss} />\n        <DrawerContent isOpen={isOpen}>{children}</DrawerContent>\n    </>\n);\n","import {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useState,\n} from 'react';\nimport { Spell } from '../models/Spell';\n\ninterface SpellSearchState {\n    textFilter: string;\n    classFilter: Set<string>;\n    levelFilter: Set<number>;\n\n    addClass: (playerClass: string) => void;\n    removeClass: (playerClass: string) => void;\n\n    addLevel: (level: number) => void;\n    removeLevel: (level: number) => void;\n\n    setTextFilter: (text: string) => void;\n\n    hasClassFilter: () => boolean;\n    hasLevelFilter: () => boolean;\n    hasTextFilter: () => boolean;\n    hasFilter: () => boolean;\n\n    apply: (spells?: Spell[]) => Spell[];\n\n    setClassFilter: (playerClasses: string[]) => void;\n\n    clear: () => void;\n}\n\nconst SpellSearchContext = createContext<SpellSearchState | undefined>(\n    undefined\n);\n\ninterface SpellSearchProviderProps {\n    children?: ReactNode;\n}\n\nexport const SpellSearchProvider = ({ children }: SpellSearchProviderProps) => {\n    const [textFilter, setTextFilter] = useState('');\n    const [classFilter, setClassFilterState] = useState(new Set<string>());\n    const [levelFilter, setLevelFilter] = useState(new Set<number>());\n\n    const clear = useCallback(() => {\n        setTextFilter('');\n        setClassFilterState(new Set());\n        setLevelFilter(new Set());\n    }, []);\n\n    const addClass = (playerClass: string) => {\n        const newClassFilter = new Set(classFilter);\n        newClassFilter.add(playerClass);\n        setClassFilterState(newClassFilter);\n    };\n\n    const setClassFilter = useCallback((playerClasses: string[]) => {\n        const newClassFilter = new Set(playerClasses);\n        setClassFilterState(newClassFilter);\n    }, []);\n\n    const removeClass = useCallback(\n        (playerClass: string) => {\n            const newClassFilter = new Set(classFilter);\n            newClassFilter.delete(playerClass);\n            setClassFilterState(newClassFilter);\n        },\n        [classFilter]\n    );\n\n    const addLevel = useCallback(\n        (level: number) => {\n            const newLevelFilter = new Set(levelFilter);\n            newLevelFilter.add(level);\n            setLevelFilter(newLevelFilter);\n        },\n        [levelFilter]\n    );\n\n    const removeLevel = useCallback(\n        (level: number) => {\n            const newLevelFilter = new Set(levelFilter);\n            newLevelFilter.delete(level);\n            setLevelFilter(newLevelFilter);\n        },\n        [levelFilter]\n    );\n\n    const hasClassFilter = () => classFilter.size > 0;\n    const hasLevelFilter = () => levelFilter.size > 0;\n    const hasTextFilter = () => textFilter.length > 0;\n    const hasFilter = () =>\n        hasClassFilter() || hasLevelFilter() || hasTextFilter();\n\n    const apply = (spells?: Spell[]): Spell[] => {\n        const textFilterLower = textFilter.toLowerCase();\n\n        return (\n            spells?.filter((s: Spell) => {\n                if (hasTextFilter()) {\n                    if (!s.name.toLowerCase().includes(textFilterLower)) {\n                        return false;\n                    }\n                }\n                if (hasClassFilter()) {\n                    if (\n                        !s.classes.some((c) => classFilter.has(c.toLowerCase()))\n                    ) {\n                        return false;\n                    }\n                }\n                if (hasLevelFilter()) {\n                    if (!levelFilter.has(s.level)) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }) || []\n        );\n    };\n\n    const state: SpellSearchState = {\n        textFilter,\n        classFilter,\n        levelFilter,\n        addClass,\n        removeClass,\n        addLevel,\n        removeLevel,\n        setTextFilter,\n        hasClassFilter,\n        hasLevelFilter,\n        hasTextFilter,\n        hasFilter,\n        apply,\n        setClassFilter,\n        clear,\n    };\n\n    return (\n        <SpellSearchContext.Provider value={state}>\n            {children}\n        </SpellSearchContext.Provider>\n    );\n};\n\nexport const useSpellSearch = () => {\n    const context = useContext(SpellSearchContext);\n\n    if (context === undefined) {\n        throw new Error(\n            'useSpellSearch must be used within a SpellSearchProvider'\n        );\n    }\n\n    return context;\n};\n","import {\n    Box,\n    Heading,\n    StyledOcticon,\n    Text,\n    TextInput,\n    themeGet,\n} from '@primer/components';\nimport { SearchIcon, XIcon } from '@primer/octicons-react';\nimport { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { UnstyledButton } from '../../components/buttons/UnstyledButton';\nimport { useSpellSearch } from '../../contexts/SpellSearchContext';\nimport {\n    levelFriendly,\n    capitalizeFirstLetter,\n} from '../../util/LevelStringFriendly';\nimport { playerClasses } from '../../data/PlayerClasses';\n\nconst TitleBar = styled(Heading)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #171c23;\n`;\n\nconst CloseButton = styled(UnstyledButton)`\n    padding: 8px;\n\n    &:active {\n        background-color: ${themeGet('colors.canvas.subtle')};\n    }\n`;\n\nconst ClassGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 8px;\n    height: 240px;\n    grid-row-gap: 8px;\n    margin-bottom: 16px;\n`;\n\nconst SpellLevelGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: 8px;\n    height: 180px;\n    grid-row-gap: 8px;\n`;\n\ninterface ClassCellProps {\n    isSelected: boolean;\n}\n\nconst ClassCell = styled.button<ClassCellProps>`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n\n    background-color: ${themeGet('colors.canvas.subtle')};\n    border: 3px solid transparent;\n    border-color: ${({ isSelected }) =>\n        isSelected ? themeGet('colors.accent.emphasis') : 'transparent'};\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.25rem;\n`;\n\nconst SpellLevelCell = styled.button<ClassCellProps>`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n\n    background-color: ${themeGet('colors.canvas.subtle')};\n    border: 3px solid transparent;\n\n    border-color: ${({ isSelected }) =>\n        isSelected ? themeGet('colors.accent.emphasis') : 'transparent'};\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.25rem;\n`;\n\nconst spellLevels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\ninterface SpellsListFilterProps {\n    onDismiss: () => void;\n}\n\nexport const SpellsListFilter = ({ onDismiss }: SpellsListFilterProps) => {\n    const {\n        classFilter,\n        addClass,\n        removeClass,\n        levelFilter,\n        addLevel,\n        removeLevel,\n        textFilter,\n        setTextFilter,\n    } = useSpellSearch();\n\n    const isClassSelected = useCallback(\n        (className: string) => classFilter.has(className),\n        [classFilter]\n    );\n    const isLevelSelected = useCallback(\n        (level: number) => levelFilter.has(level),\n        [levelFilter]\n    );\n\n    const handleTextFilterChange = useCallback(\n        (e: any) => {\n            setTextFilter(e.target.value);\n        },\n        [setTextFilter]\n    );\n\n    const toggleClass = (className: string) => () => {\n        if (isClassSelected(className)) {\n            removeClass(className);\n        } else {\n            addClass(className);\n        }\n    };\n\n    const toggleLevel = (level: number) => () => {\n        if (isLevelSelected(level)) {\n            removeLevel(level);\n        } else {\n            addLevel(level);\n        }\n    };\n\n    return (\n        <Box overflow=\"auto\" height=\"100%\">\n            <TitleBar p={2} as=\"h3\" fontSize={2}>\n                <Text p={2}>\n                    <StyledOcticon icon={SearchIcon} size={18} mr={1} />\n                    Filter\n                </Text>\n                <CloseButton onClick={onDismiss}>\n                    <StyledOcticon icon={XIcon} size={32} />\n                </CloseButton>\n            </TitleBar>\n            <Box p={3}>\n                <Box mb={3}>\n                    <TextInput\n                        icon={SearchIcon}\n                        aria-label=\"Spell name\"\n                        name=\"spell-name\"\n                        placeholder=\"Search spells\"\n                        value={textFilter}\n                        onChange={handleTextFilterChange}\n                        width=\"100%\"\n                    />\n                </Box>\n                <Text pb={2} display=\"block\" fontWeight=\"600\">\n                    Class\n                </Text>\n                <ClassGrid>\n                    {playerClasses.map((playerClass) => (\n                        <ClassCell\n                            key={playerClass}\n                            isSelected={isClassSelected(playerClass)}\n                            onClick={toggleClass(playerClass)}\n                        >\n                            {capitalizeFirstLetter(playerClass)}\n                        </ClassCell>\n                    ))}\n                </ClassGrid>\n                <Text pb={2} display=\"block\" fontWeight=\"600\">\n                    Spell level\n                </Text>\n                <SpellLevelGrid>\n                    {spellLevels.map((spellLevel) => (\n                        <SpellLevelCell\n                            key={spellLevel}\n                            isSelected={isLevelSelected(spellLevel)}\n                            onClick={toggleLevel(spellLevel)}\n                        >\n                            {levelFriendly(spellLevel)}\n                        </SpellLevelCell>\n                    ))}\n                </SpellLevelGrid>\n            </Box>\n        </Box>\n    );\n};\n","import { Box, useTheme } from '@primer/components';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { useCallback, useEffect, useState } from 'react';\nimport { RepoIcon, SearchIcon } from '@primer/octicons-react';\nimport { InfiniteSpellList } from './InfiniteSpellList';\nimport { Drawer } from '../../components/Drawer';\nimport { SpellsListFilter } from './SpellsListFilter';\nimport { useSpellSearch } from '../../contexts/SpellSearchContext';\nimport { useSpellbook } from '../../contexts/SpellbooksContext';\nimport { getSpells } from '../../data/Spells';\nimport { useNavigation } from '../../contexts/NavigationContext';\n\nexport const SpellListPage = () => {\n    const data = getSpells();\n    const spellbook = useSpellbook();\n    const filter = useSpellSearch();\n    const [isFilterDrawerOpen, setIsFilterDrawerOpen] = useState(false);\n    const spells = filter.apply(data).sort((s1, s2) => s1.level - s2.level);\n    const { theme } = useTheme();\n    const { selectedSpell } = useNavigation();\n\n    useEffect(() => {\n        if (spellbook) {\n            filter.setClassFilter(spellbook.classes);\n        } else if (!selectedSpell) {\n            filter.clear();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [spellbook, selectedSpell]);\n\n    const showFilter = useCallback(() => {\n        setIsFilterDrawerOpen(true);\n    }, [setIsFilterDrawerOpen]);\n\n    const hideDrawer = useCallback(() => {\n        setIsFilterDrawerOpen(false);\n    }, [setIsFilterDrawerOpen]);\n\n    return (\n        <>\n            <PageHeader>\n                <PageHeader.Title icon={RepoIcon} title=\"Spells\" />\n                <PageHeader.Action\n                    icon={SearchIcon}\n                    label=\"search\"\n                    onClick={showFilter}\n                    color={\n                        filter.hasFilter()\n                            ? theme?.colors.accent.emphasis\n                            : 'inherit'\n                    }\n                />\n            </PageHeader>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex=\"1 1 auto\"\n                height=\"100%\"\n            >\n                <InfiniteSpellList spells={spells} selectedSpell={selectedSpell} />\n                <Drawer isOpen={isFilterDrawerOpen} onDismiss={hideDrawer}>\n                    <SpellsListFilter onDismiss={hideDrawer} />\n                </Drawer>\n            </Box>\n        </>\n    );\n};\n","import { Box, Flash, StyledOcticon, Text } from '@primer/components';\nimport { AlertIcon, PlusIcon, RepoIcon } from '@primer/octicons-react';\nimport { useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { SpellRow } from '../spells/SpellRow';\n\ninterface SpellbookPageParams {\n    spellbookId: string;\n}\n\nexport const SpellbookPage = () => {\n    const { spellbookId } = useParams<SpellbookPageParams>();\n    const { getSpellbookById } = useSpellbooks();\n    const history = useHistory();\n    const spellbook = getSpellbookById(spellbookId);\n\n    const goToAddSpellsPage = useCallback(() => {\n        history.push(`/spellbook/${spellbookId}/add`);\n    }, [history, spellbookId]);\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <PageHeader>\n                <PageHeader.Title\n                    icon={RepoIcon}\n                    title={spellbook?.name ?? 'Unknown'}\n                />\n                <PageHeader.Action\n                    icon={PlusIcon}\n                    label=\"Add spell\"\n                    onClick={goToAddSpellsPage}\n                />\n            </PageHeader>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex=\"1 1 auto\"\n                overflow=\"auto\"\n            >\n                {spellbook ? (\n                    <Box>\n                        {spellbook.spells.map((spell) => (\n                            <SpellRow key={spell.name} spell={spell} />\n                        ))}\n                    </Box>\n                ) : (\n                    <Flash variant=\"danger\">\n                        <StyledOcticon icon={AlertIcon} />\n                        <Text fontWeight={400}>\n                            Spellbook \"{spellbookId}\" not found\n                        </Text>\n                    </Flash>\n                )}\n            </Box>\n        </Box>\n    );\n};\n","import { Box } from '@primer/components';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { AppHeader } from '../layout/AppHeader';\nimport { HomePage } from './home/HomePage';\nimport { SpellbookListPage } from './spellbooks/SpellbookListPage';\nimport { SpellPage } from './spells/SpellPage';\nimport { SpellListPage } from './spells/SpellListPage';\nimport { SpellbookPage } from './spellbooks/SpellbookPage';\n\nexport const Routes = () => (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AppHeader />\n        <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            overflowY=\"auto\"\n            height=\"100%\"\n        >\n            <Switch>\n                <Route path=\"/spells\">\n                    <SpellListPage />\n                </Route>\n                <Route path=\"/spell/:slug\">\n                    <SpellPage />\n                </Route>\n                <Route path=\"/spellbooks\">\n                    <SpellbookListPage />\n                </Route>\n                <Route path=\"/spellbook/:spellbookId/add\">\n                    <SpellListPage />\n                </Route>\n                <Route path=\"/spellbook/:spellbookId\">\n                    <SpellbookPage />\n                </Route>\n                <Route>\n                    <HomePage />\n                </Route>\n            </Switch>\n        </Box>\n    </BrowserRouter>\n);\n","import React from 'react';\nimport { ThemeProvider } from '@primer/components';\n\ninterface AppThemeProviderProps {\n    children?: React.ReactNode;\n}\n\nexport const AppThemeProvider = ({ children }: AppThemeProviderProps) => (\n    <ThemeProvider colorMode=\"night\" nightScheme=\"dark_dimmed\">\n        {children}\n    </ThemeProvider>\n);\n","import React from 'react';\nimport { BaseStyles, Box } from '@primer/components';\nimport { GraphProvider } from './gql/GraphProvider';\nimport { Routes } from './pages/Routes';\nimport { AppThemeProvider } from './layout/AppThemeProvider';\nimport styled from 'styled-components';\nimport { SpellSearchProvider } from './contexts/SpellSearchContext';\nimport { SpellbooksProvider } from './contexts/SpellbooksContext';\nimport { NavigationProvider } from './contexts/NavigationContext';\n\nconst Base = styled(BaseStyles)`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    position: relative;\n`;\n\nexport const App = () => (\n    <AppThemeProvider>\n        <GraphProvider>\n            <SpellbooksProvider>\n                <SpellSearchProvider>\n                    <NavigationProvider>\n                        <Box height=\"100%\" bg=\"bg.primary\" overflowY=\"auto\">\n                            <Base>\n                                <Routes />\n                            </Base>\n                        </Box>\n                    </NavigationProvider>\n                </SpellSearchProvider>\n            </SpellbooksProvider>\n        </GraphProvider>\n    </AppThemeProvider>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}