{"version":3,"sources":["gql/GraphProvider.tsx","components/buttons/UnstyledButton.tsx","layout/AppHeader.tsx","components/spells/list/List.tsx","contexts/NavigationContext.tsx","pages/home/HomePage.tsx","layout/PageHeader.tsx","data/Spells.tsx","models/SpellbookRepository.tsx","contexts/SpellbooksContext.tsx","components/Screen.tsx","components/Dialog.tsx","data/PlayerClasses.tsx","util/LevelStringFriendly.tsx","pages/spellbooks/SpellbookCreate.tsx","util/ArrayUtils.tsx","util/IDGenerator.tsx","pages/spellbooks/SpellbookDelete.tsx","pages/spellbooks/SpellbookListPage.tsx","models/SpellFavoritesRepository.tsx","contexts/SpellFavoritesContext.tsx","pages/spells/SpellPage.tsx","pages/spells/SpellRow.tsx","pages/spells/InfiniteSpellList.tsx","components/Drawer.tsx","contexts/SpellSearchContext.tsx","pages/spells/SpellsListFilter.tsx","pages/spells/SpellListPage.tsx","pages/spellbooks/SpellbookPage.tsx","pages/Routes.tsx","layout/AppThemeProvider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client","ApolloClient","uri","cache","InMemoryCache","GraphProvider","children","ApolloProvider","UnstyledButton","styled","button","LogoLink","Link","themeGet","BackBtn","AppHeader","history","useHistory","showBtn","useLocation","pathname","Box","bg","pl","pr","pt","pb","justifyContent","display","alignItems","fontWeight","onClick","goBack","StyledOcticon","icon","TriangleLeftIcon","size","to","RepoIcon","mr","ListItem","li","List","ul","NavigationContext","createContext","undefined","NavigationProvider","useState","selectedSpell","setSelectedSpell","state","scrollOffset","setScrollOffset","Provider","value","useNavigation","context","useContext","Error","HomePageLink","HomePage","useEffect","flexDirection","as","p","StackIcon","PageHeader","boxShadow","Title","title","PageTitle","fontSize","Action","label","color","ActionButton","Heading","spells","Map","data","forEach","datum","set","slug","getSpell","get","mapDataToSpellbook","spellbookId","name","classes","map","SpellbooksContext","SpellbooksProvider","spellbooks","setSpellbooks","books","i","len","localStorage","length","key","startsWith","rawData","getItem","JSON","parse","book","push","repository","console","log","saveSpellbook","useCallback","spellbook","setItem","stringify","spell","idx","findIndex","s","clone","deleteSpellbook","removeItem","splice","getSpellbookById","find","useSpellbooks","useSpellbook","useParams","ScreenDiv","div","isOpen","Screen","onDismiss","close","e","stopPropagation","preventDefault","Dialog","DialogContainer","DialogContent","Header","playerClasses","levelFriendly","level","colorMap","abjuration","conjuration","divination","enchantment","evocation","illusion","necromancy","transmutation","getSpellSchoolColor","school","toLowerCase","capitalizeFirstLetter","str","charAt","toUpperCase","slice","classShortMap","bard","cleric","druid","paladin","ranger","sorcerer","warlock","wizard","SpellbookCreate","setName","selectedClasses","setSelectedClasses","onNameChange","target","toggleClass","includes","arr","element","indexOf","removeFromArray","isClassSelected","className","createSpellbook","Math","random","toString","substring","trim","mb","TextInput","placeholder","onChange","width","Text","ClassGrid","playerClass","ClassCell","isSelected","mt","ButtonPrimary","disabled","SpellbookDelete","doDelete","TrashIcon","Button","ButtonDanger","DeleteButton","SpellbookRow","SpellbookListPage","isCreateModalOpen","setIsCreateModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","selectedSpellbook","setSelectedSpellbook","showDeleteSpellbookModal","PlusIcon","join","favoritesKey","getFavoriteSpellSlugs","SpellFavoritesContext","SpellFavoritesProvider","favorites","setFavorites","slugs","isFavorite","toggleFavorite","toggleFavoriteSpell","useSpellFavorites","renderPart","isSpellListItem","text","reg","DiceRoll","span","renderDescText","reactStringReplace","match","renderDescription","description","flatMap","desc","endsWith","SpellPage","notFound","favorite","BookmarkFillIcon","StarFillIcon","ml","Flash","variant","AlertIcon","castingTime","duration","range","components","concentration","ritual","higherLevelDesc","Card","SpellButton","AddButton","RemoveButton","FavoriteButton","SpellRow","mods","isFav","toggleFav","borderBottom","some","inSpellbook","c","classname","getClassNameShort","Row","index","style","SpellListContainer","InfiniteSpellList","containerRef","useRef","listRef","useResizeDetector","targetRef","height","current","scrollTo","handleScroll","ref","onScroll","itemCount","itemData","itemSize","DrawerContent","Drawer","SpellSearchContext","SpellSearchProvider","textFilter","setTextFilter","Set","classFilter","setClassFilterState","levelFilter","setLevelFilter","favoritesFilter","setFavoritesFilter","clear","toggleFavoritesFilter","setClassFilter","newClassFilter","removeClass","delete","addLevel","newLevelFilter","add","removeLevel","hasClassFilter","hasLevelFilter","hasTextFilter","addClass","hasFilter","apply","textFilterLower","filter","has","useSpellSearch","TitleBar","CloseButton","SpellLevelGrid","SpellLevelCell","spellLevels","SpellsListFilter","isLevelSelected","handleTextFilterChange","overflow","SearchIcon","XIcon","spellLevel","SpellListPage","Array","from","values","isFilterDrawerOpen","setIsFilterDrawerOpen","sort","s1","s2","theme","useTheme","showFilter","hideDrawer","colors","accent","emphasis","flex","SpellbookPage","goToAddSpellsPage","textAlign","Routes","basename","process","overflowY","path","AppThemeProvider","ThemeProvider","colorMode","nightScheme","Base","BaseStyles","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18a6b546.chunk.js","sourcesContent":["import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n    uri: 'https://www.dnd5eapi.co/graphql',\n    cache: new InMemoryCache(),\n});\n\ninterface GraphProviderProps {\n    children?: React.ReactNode;\n}\n\nexport const GraphProvider = ({ children }: GraphProviderProps) => (\n    <ApolloProvider client={client}>{children}</ApolloProvider>\n);\n","import styled from 'styled-components';\n\nexport const UnstyledButton = styled.button`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    border: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n`;\n","import { Box, themeGet, StyledOcticon } from '@primer/components';\nimport { TriangleLeftIcon, RepoIcon } from '@primer/octicons-react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { UnstyledButton } from '../components/buttons/UnstyledButton';\nimport styled from 'styled-components';\n\nconst LogoLink = styled(Link)`\n    font-weight: bold;\n    text-decoration: inherit;\n    color: ${themeGet('colors.fg.subtle')};\n`;\n\nconst BackBtn = styled(UnstyledButton)`\n    position: absolute;\n    left: 8px;\n    top: 8px;\n    color: ${themeGet('colors.fg.default')};\n    display: inline-flex;\n    align-items: center;\n`;\n\nexport const AppHeader = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const showBtn = location.pathname !== '/';\n\n    return (\n        <Box\n            bg=\"#171c23\"\n            pl={4}\n            pr={4}\n            pt={2}\n            pb={2}\n            justifyContent=\"center\"\n            display=\"flex\"\n            alignItems=\"center\"\n            fontWeight={500}\n        >\n            {showBtn && (\n                <BackBtn onClick={() => history.goBack()}>\n                    <StyledOcticon icon={TriangleLeftIcon} size={17} />\n                    <span>Back</span>\n                </BackBtn>\n            )}\n            <LogoLink to=\"/\">\n                <StyledOcticon icon={RepoIcon} size={16} mr={1} />\n                <span>D&D Companion</span>\n            </LogoLink>\n        </Box>\n    );\n};\n","import { themeGet } from '@primer/components';\nimport styled from 'styled-components';\n\nexport const ListItem = styled.li`\n    border-bottom: 1px solid ${themeGet('colors.border.muted')};\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`;\n","import { createContext, ReactNode, useContext, useState } from 'react';\nimport { Spell } from '../models/Spell';\n\ninterface NavigationState {\n    selectedSpell?: Spell;\n    setSelectedSpell: (spell: Spell | undefined) => void;\n    scrollOffset?: number;\n    setScrollOffset: (scrollOffset: number) => void;\n}\n\nconst NavigationContext = createContext<NavigationState | undefined>(undefined);\n\ninterface NavigationProviderProps {\n    children?: ReactNode;\n}\n\nexport const NavigationProvider = ({ children }: NavigationProviderProps) => {\n    const [selectedSpell, setSelectedSpell] = useState<Spell>();\n    const [scrollOffset, setScrollOffset] = useState<number>(0);\n\n    const state = {\n        selectedSpell,\n        setSelectedSpell,\n        scrollOffset,\n        setScrollOffset,\n    };\n\n    return (\n        <NavigationContext.Provider value={state}>\n            {children}\n        </NavigationContext.Provider>\n    );\n};\n\nexport const useNavigation = () => {\n    const context = useContext(NavigationContext);\n\n    if (context === undefined) {\n        throw new Error(\n            'useNavigation must be used within a NavigationContextProvider'\n        );\n    }\n\n    return context;\n};\n","import { Box, StyledOcticon } from '@primer/components';\nimport { RepoIcon, StackIcon } from '@primer/octicons-react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { List, ListItem } from '../../components/spells/list/List';\nimport { useNavigation } from '../../contexts/NavigationContext';\n\nconst HomePageLink = styled(Box)`\n    display: block;\n    color: inherit;\n    width: 100%;\n    text-decoration: inherit;\n    text-align: left;\n    font-size: 18px;\n    font-weight: inherit;\n    background-color: inherit;\n    border: none;\n    border-radius: 0;\n\n    &:active,\n    &:hover {\n        background-color: #eee;\n    }\n`;\n\nexport const HomePage = () => {\n    const { setSelectedSpell } = useNavigation();\n\n    useEffect(() => {\n        setSelectedSpell(undefined);\n    }, [setSelectedSpell]);\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <List>\n                <ListItem>\n                    <HomePageLink as={Link} to=\"/spellbooks\" p={4}>\n                        <StyledOcticon icon={StackIcon} size={24} mr={3} />\n                        Spellbooks\n                    </HomePageLink>\n                </ListItem>\n                <ListItem>\n                    <HomePageLink as={Link} to=\"/spells\" p={4}>\n                        <StyledOcticon icon={RepoIcon} size={24} mr={3} />\n                        Spell reference\n                    </HomePageLink>\n                </ListItem>\n            </List>\n        </Box>\n    );\n};\n","import { Box, Heading, StyledOcticon, themeGet } from '@primer/components';\nimport styled from 'styled-components';\nimport { UnstyledButton } from '../components/buttons/UnstyledButton';\n\ninterface PageHeaderProps {\n    children?: React.ReactNode;\n}\n\nexport const PageHeader = ({ children }: PageHeaderProps) => (\n    <Box\n        bg=\"canvas.inset\"\n        boxShadow=\"shadow.small\"\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        p={2}\n    >\n        {children}\n    </Box>\n);\n\ninterface PageHeaderTitleProps {\n    icon?: React.ElementType;\n    title: string;\n}\n\nPageHeader.Title = ({ icon, title }: PageHeaderTitleProps) => (\n    <PageTitle fontSize={3} fontWeight={600} p={3}>\n        {icon && <StyledOcticon icon={icon} size={24} mr={1} />}\n        <span>{title}</span>\n    </PageTitle>\n);\n\ninterface PageHeaderActionProp {\n    icon?: React.ElementType;\n    label: string;\n    onClick?: () => void;\n    color?: any;\n}\n\nPageHeader.Action = ({ icon, label, onClick, color }: PageHeaderActionProp) => (\n    <ActionButton onClick={onClick}>\n        {icon && (\n            <StyledOcticon\n                color={color}\n                icon={icon}\n                size={24}\n                aria-label={label}\n            />\n        )}\n    </ActionButton>\n);\n\nconst PageTitle = styled(Heading)`\n    flex: 1 1 auto;\n`;\n\nconst ActionButton = styled(UnstyledButton)`\n    padding: 12px;\n    &:active {\n        background-color: ${themeGet('colors.canvas.subtle')};\n    }\n`;\n","import { Spell } from '../models/Spell';\nimport data from './spells.json';\n\nconst spells = new Map<string, Spell>();\n\ndata.forEach((datum) => {\n    spells.set(datum.slug, datum);\n});\n\nexport const getSpell = (slug: string): Spell | undefined => spells.get(slug);\nexport const getSpells = (): Spell[] => Array.from(spells.values());\n","import { getSpell } from '../data/Spells';\nimport { Spell } from './Spell';\nimport { Spellbook } from './Spellbook';\n\nconst mapDataToSpellbook = (data: any): Spellbook => ({\n    spellbookId: data.spellbookId,\n    name: data.name,\n    classes: data.classes,\n    spells: data.spells?.map((slug: string) => getSpell(slug)) || [],\n});\n\nexport const saveSpellbook = (book: Spellbook) => {\n    const key = `book-${book.spellbookId}`;\n\n    localStorage.setItem(\n        key,\n        JSON.stringify({\n            spellbookId: book.spellbookId,\n            name: book.name,\n            classes: book.classes,\n            spells: book.spells?.map((spell: Spell) => spell.slug) || [],\n        })\n    );\n};\n\nexport const deleteSpellbook = (book: Spellbook) => {\n    const key = `book-${book.spellbookId}`;\n\n    localStorage.removeItem(key);\n};\n\nexport const getSpellbooks = (): Spellbook[] => {\n    const books = [];\n\n    for (let i = 0, len = localStorage.length; i < len; ++i) {\n        const key = localStorage.key(i);\n\n        if (key?.startsWith('book-')) {\n            const rawData = localStorage.getItem(key);\n\n            if (rawData) {\n                const data = JSON.parse(rawData);\n                const book = mapDataToSpellbook(data);\n\n                books.push(book);\n            }\n        }\n    }\n\n    return books;\n};\n","import { Spellbook } from '../models/Spellbook';\nimport {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useEffect,\n    useState,\n} from 'react';\nimport * as repository from '../models/SpellbookRepository';\nimport { useParams } from 'react-router';\n\ninterface SpellbooksState {\n    spellbooks: Spellbook[];\n\n    saveSpellbook: (book: Spellbook) => void;\n    deleteSpellbook: (book: Spellbook) => void;\n    getSpellbookById: (spellbookId: string) => Spellbook | undefined;\n}\n\nconst SpellbooksContext = createContext<SpellbooksState | undefined>(undefined);\n\ninterface SpellbooksProviderProps {\n    children?: ReactNode;\n}\n\nexport const SpellbooksProvider = ({ children }: SpellbooksProviderProps) => {\n    const [spellbooks, setSpellbooks] = useState<Spellbook[]>([]);\n\n    useEffect(() => {\n        const books = repository.getSpellbooks();\n\n        console.log('LOAD SPELLBOOKS');\n\n        setSpellbooks(books);\n    }, []);\n\n    const saveSpellbook = useCallback(\n        (spellbook: Spellbook) => {\n            repository.saveSpellbook(spellbook);\n            const idx = spellbooks.findIndex(\n                (s) => s.spellbookId === spellbook.spellbookId\n            );\n            const clone = [...spellbooks];\n\n            if (idx >= 0) {\n                clone[idx] = spellbook;\n            } else {\n                clone.push(spellbook);\n            }\n\n            setSpellbooks(clone);\n        },\n        [setSpellbooks, spellbooks]\n    );\n\n    const deleteSpellbook = useCallback(\n        (spellbook: Spellbook) => {\n            repository.deleteSpellbook(spellbook);\n            const idx = spellbooks.findIndex(\n                (s) => s.spellbookId === spellbook.spellbookId\n            );\n            const clone = [...spellbooks];\n\n            if (idx >= 0) {\n                clone.splice(idx, 1);\n            }\n\n            setSpellbooks(clone);\n        },\n        [setSpellbooks, spellbooks]\n    );\n\n    const getSpellbookById = useCallback(\n        (spellbookId: string) => {\n            return spellbooks.find((s) => s.spellbookId === spellbookId);\n        },\n        [spellbooks]\n    );\n\n    const state = {\n        spellbooks,\n        saveSpellbook,\n        deleteSpellbook,\n        getSpellbookById,\n    };\n\n    return (\n        <SpellbooksContext.Provider value={state}>\n            {children}\n        </SpellbooksContext.Provider>\n    );\n};\n\nexport const useSpellbooks = () => {\n    const context = useContext(SpellbooksContext);\n\n    if (context === undefined) {\n        throw new Error(\n            'useSpellbooks must be used within a SpellbooksContextProvider'\n        );\n    }\n\n    return context;\n};\n\ninterface SpellbookIdParam {\n    spellbookId?: string;\n}\n\nexport const useSpellbook = (): Spellbook | void => {\n    const { spellbookId } = useParams<SpellbookIdParam>();\n    const { getSpellbookById } = useSpellbooks();\n\n    if (spellbookId) {\n        const spellbook = getSpellbookById(spellbookId);\n\n        return spellbook;\n    }\n\n    return undefined;\n};\n","import { useCallback } from 'react';\nimport styled from 'styled-components';\n\nconst ScreenDiv = styled.div<{ isOpen: boolean }>`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    transition: background-color 0.5s ease;\n    backdrop-filter: background-color 0.5s ease;\n\n    background-color: ${({ isOpen }) => (isOpen ? '#00000066' : '00000000')};\n    pointer-events: ${({ isOpen }) => (isOpen ? 'all' : 'none')};\n    backdrop-filter: ${({ isOpen }) => (isOpen ? 'blur(1px)' : 'none')};\n`;\n\ninterface ScreenProps {\n    children?: React.ReactNode;\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const Screen = ({ isOpen, onDismiss, children }: ScreenProps) => {\n    const close = useCallback(\n        (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            onDismiss();\n        },\n        [onDismiss]\n    );\n\n    return (\n        <ScreenDiv isOpen={isOpen} onClick={close}>\n            {children}\n        </ScreenDiv>\n    );\n};\n","import { Box, Heading, StyledOcticon, themeGet } from '@primer/components';\nimport styled from 'styled-components';\nimport { Screen } from './Screen';\n\ninterface DialogProps {\n    children?: React.ReactNode;\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const Dialog = ({ isOpen, onDismiss, children }: DialogProps) => (\n    <>\n        <Screen isOpen={isOpen} onDismiss={onDismiss} />\n        <DialogContainer isOpen={isOpen}>\n            <DialogContent isOpen={isOpen}>{children}</DialogContent>\n        </DialogContainer>\n    </>\n);\n\ninterface DialogHeaderProps {\n    icon?: React.ElementType;\n    title: string;\n}\n\nDialog.Header = ({ icon, title }: DialogHeaderProps) => (\n    <Box bg=\"canvas.inset\">\n        <Heading fontSize={2} fontWeight={600} p={4}>\n            {icon && <StyledOcticon icon={icon} size={18} mr={1} />}\n            <span>{title}</span>\n        </Heading>\n    </Box>\n);\n\nconst DialogContainer = styled.div<{ isOpen: boolean }>`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nconst DialogContent = styled.div<{ isOpen: boolean }>`\n    pointer-events: all;\n    background-color: ${themeGet('colors.canvas.default')};\n    border-radius: 0.5rem;\n\n    max-width: 320px;\n    width: 90%;\n    min-height: 120px;\n\n    margin-top: 80px;\n\n    transition: box-shadow 0.15s ease;\n\n    box-shadow: ${({ isOpen }) =>\n        isOpen ? 'rgb(12 15 21 / 73%) 5px 5px 16px 1px' : 'none'};\n    display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n    overflow: hidden;\n`;\n","export const playerClasses = [\n    'bard',\n    'cleric',\n    'druid',\n    'paladin',\n    'ranger',\n    'sorcerer',\n    'warlock',\n    'wizard',\n];\n","export const levelFriendly = (level: number): string => {\n    if (level === 0) {\n        return '0';\n    }\n\n    if (level === 1) {\n        return '1st';\n    }\n\n    if (level === 2) {\n        return '2nd';\n    }\n\n    if (level === 3) {\n        return '3rd';\n    }\n\n    return `${level}th`;\n};\n\nconst colorMap: { [key: string]: string } = {\n    abjuration: '#f0d95e',\n    conjuration: '#a7b945',\n    divination: '#e7f4f3',\n    enchantment: '#f2f09f',\n    evocation: '#d14444',\n    illusion: '#b55db5',\n    necromancy: '#77c977',\n    transmutation: '#52b8e0',\n};\n\nexport const getSpellSchoolColor = (school?: string): string =>\n    (school && colorMap[school?.toLowerCase()]) ?? 'inherit';\n\nexport const capitalizeFirstLetter = (str: string): string =>\n    str.charAt(0).toUpperCase() + str.slice(1);\n\nconst classShortMap: { [key: string]: string } = {\n    bard: 'brd',\n    cleric: 'cle',\n    druid: 'dru',\n    paladin: 'pal',\n    ranger: 'rng',\n    sorcerer: 'sor',\n    warlock: 'war',\n    wizard: 'wiz',\n};\n\nexport const getClassNameShort = (classname: string): string =>\n    classShortMap[classname.toLowerCase()] ?? '?';\n","import {\n    Box,\n    Text,\n    ButtonPrimary,\n    TextInput,\n    themeGet,\n} from '@primer/components';\nimport { StackIcon } from '@primer/octicons-react';\nimport { useCallback, useState } from 'react';\nimport { Dialog } from '../../components/Dialog';\nimport { playerClasses } from '../../data/PlayerClasses';\nimport { capitalizeFirstLetter } from '../../util/LevelStringFriendly';\nimport styled from 'styled-components';\nimport { removeFromArray } from '../../util/ArrayUtils';\nimport { useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { generateId } from '../../util/IDGenerator';\n\ninterface SpellbookCreateProps {\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const SpellbookCreate = ({\n    isOpen,\n    onDismiss,\n}: SpellbookCreateProps) => {\n    const [name, setName] = useState('');\n    const [selectedClasses, setSelectedClasses] = useState<string[]>([]);\n    const { saveSpellbook } = useSpellbooks();\n\n    const onNameChange = useCallback(\n        (e: any) => {\n            setName(e.target.value);\n        },\n        [setName]\n    );\n\n    const toggleClass = useCallback(\n        (name) => {\n            if (selectedClasses.includes(name)) {\n                setSelectedClasses(\n                    removeFromArray<string>(selectedClasses, name)\n                );\n            } else {\n                setSelectedClasses([...selectedClasses, name]);\n            }\n        },\n        [selectedClasses, setSelectedClasses]\n    );\n\n    const isClassSelected = useCallback(\n        (className: string) => selectedClasses.includes(className),\n        [selectedClasses]\n    );\n\n    const createSpellbook = useCallback(() => {\n        saveSpellbook({\n            spellbookId: generateId(),\n            name: name.trim(),\n            classes: [...selectedClasses],\n            spells: [],\n        });\n        onDismiss();\n    }, [name, selectedClasses, saveSpellbook, onDismiss]);\n\n    return (\n        <Dialog isOpen={isOpen} onDismiss={onDismiss}>\n            <Dialog.Header icon={StackIcon} title=\"Create spellbook\" />\n            <Box p={3}>\n                <Box mb={3}>\n                    <TextInput\n                        aria-label=\"Spellbook name\"\n                        name=\"spellbok-name\"\n                        placeholder=\"Spellbook name\"\n                        value={name}\n                        onChange={onNameChange}\n                        width=\"100%\"\n                    />\n                </Box>\n                <Text pb={2} display=\"block\" fontWeight=\"600\">\n                    Classes\n                </Text>\n                <ClassGrid>\n                    {playerClasses.map((playerClass) => (\n                        <ClassCell\n                            key={playerClass}\n                            isSelected={isClassSelected(playerClass)}\n                            onClick={() => toggleClass(playerClass)}\n                        >\n                            {capitalizeFirstLetter(playerClass)}\n                        </ClassCell>\n                    ))}\n                </ClassGrid>\n                <Box display=\"flex\" mt={3} justifyContent=\"flex-end\">\n                    <ButtonPrimary\n                        disabled={name.trim().length <= 0}\n                        onClick={createSpellbook}\n                    >\n                        Create\n                    </ButtonPrimary>\n                </Box>\n            </Box>\n        </Dialog>\n    );\n};\n\nconst ClassGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 8px;\n    height: 240px;\n    grid-row-gap: 8px;\n    margin-bottom: 16px;\n`;\n\ninterface ClassCellProps {\n    isSelected: boolean;\n}\n\nconst ClassCell = styled.button<ClassCellProps>`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n\n    background-color: ${themeGet('colors.canvas.subtle')};\n    border: 3px solid transparent;\n    border-color: ${({ isSelected }) =>\n        isSelected ? themeGet('colors.accent.emphasis') : 'transparent'};\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.25rem;\n`;\n","export const removeFromArray = <T extends unknown>(\n    arr: T[],\n    element: T\n): T[] => {\n    const idx = arr.indexOf(element);\n\n    if (idx >= 0) {\n        const clone = [...arr];\n\n        clone.splice(idx, 1);\n\n        return clone;\n    }\n\n    return arr;\n};\n","export const generateId = (): string =>\n    Math.random().toString(36).substring(2, 9);\n","import { Box, Text, Button, ButtonDanger } from '@primer/components';\nimport { TrashIcon } from '@primer/octicons-react';\nimport { useCallback } from 'react';\nimport { Dialog } from '../../components/Dialog';\nimport { useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { Spellbook } from '../../models/Spellbook';\n\ninterface SpellbookDeleteProps {\n    isOpen: boolean;\n    spellbook?: Spellbook;\n    onDismiss: () => void;\n}\n\nexport const SpellbookDelete = ({\n    isOpen,\n    onDismiss,\n    spellbook,\n}: SpellbookDeleteProps) => {\n    const { deleteSpellbook } = useSpellbooks();\n\n    const doDelete = useCallback(() => {\n        if (spellbook) {\n            deleteSpellbook(spellbook);\n        }\n        onDismiss();\n    }, [spellbook, onDismiss, deleteSpellbook]);\n\n    return (\n        <Dialog isOpen={isOpen} onDismiss={onDismiss}>\n            <Dialog.Header icon={TrashIcon} title=\"Delete spellbook\" />\n            <Box p={3}>\n                <Text pb={2} display=\"block\" fontWeight=\"600\">\n                    Are you sure you want to delete \"{spellbook?.name}\"\n                    spellbook?\n                </Text>\n                <Box display=\"flex\" mt={3} justifyContent=\"flex-end\">\n                    <Button onClick={onDismiss} mr={2}>\n                        Cancel\n                    </Button>\n                    <ButtonDanger onClick={doDelete}>Delete</ButtonDanger>\n                </Box>\n            </Box>\n        </Dialog>\n    );\n};\n","import { Box, Text, Button, ButtonPrimary } from '@primer/components';\nimport { PlusIcon, StackIcon } from '@primer/octicons-react';\nimport { useCallback, useState } from 'react';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { SpellbookCreate } from './SpellbookCreate';\nimport { SpellbookDelete } from './SpellbookDelete';\nimport { List, ListItem } from '../../components/spells/list/List';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst DeleteButton = styled(Button)`\n    font-size: 14px;\n    padding: 4px 8px;\n    background-color: #373e47;\n    border-color: #0f1c29a1;\n`;\n\nconst SpellbookRow = styled(Box)`\n    text-decoration: none;\n    color: inherit;\n`;\n\nexport const SpellbookListPage = () => {\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n    const [selectedSpellbook, setSelectedSpellbook] = useState(undefined);\n    const { spellbooks } = useSpellbooks();\n\n    const showDeleteSpellbookModal = useCallback(\n        (spellbook) => {\n            setSelectedSpellbook(spellbook);\n            setIsDeleteModalOpen(true);\n        },\n        [setSelectedSpellbook, setIsDeleteModalOpen]\n    );\n\n    return (\n        <>\n            <PageHeader>\n                <PageHeader.Title icon={StackIcon} title=\"Spellbooks\" />\n                <PageHeader.Action\n                    icon={PlusIcon}\n                    label=\"Create spellbook\"\n                    onClick={() => setIsCreateModalOpen(true)}\n                />\n            </PageHeader>\n            <Box display=\"flex\" flexDirection=\"column\">\n                {spellbooks.length <= 0 && (\n                    <Box\n                        pt={5}\n                        pl={3}\n                        pr={3}\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        flexDirection=\"column\"\n                        alignItems=\"center\"\n                    >\n                        <Text pb={5} fontSize={3} color=\"#3c4147\">\n                            You have no spellbooks.\n                        </Text>\n                    </Box>\n                )}\n                <List>\n                    {spellbooks.map((book) => (\n                        <ListItem key={book.spellbookId}>\n                            <SpellbookRow\n                                p={3}\n                                as={Link}\n                                to={`/spellbook/${book.spellbookId}`}\n                                display=\"block\"\n                            >\n                                <Box\n                                    display=\"flex\"\n                                    justifyContent=\"space-between\"\n                                >\n                                    <Text fontSize={2} fontWeight={600}>\n                                        {book.name}\n                                    </Text>\n                                    <DeleteButton\n                                        onClick={(e) => {\n                                            console.log('CLICKED BTN');\n                                            e.stopPropagation();\n                                            e.preventDefault();\n                                            showDeleteSpellbookModal(book);\n                                        }}\n                                    >\n                                        Delete\n                                    </DeleteButton>\n                                </Box>\n                                <Box\n                                    display=\"flex\"\n                                    justifyContent=\"space-between\"\n                                >\n                                    <Text fontSize={1} color=\"#6e7b8a\">\n                                        {book.spells.length} spells,{' '}\n                                        {book.classes.join(', ')}\n                                    </Text>\n                                </Box>\n                            </SpellbookRow>\n                        </ListItem>\n                    ))}\n                </List>\n            </Box>\n            <SpellbookCreate\n                isOpen={isCreateModalOpen}\n                onDismiss={() => setIsCreateModalOpen(false)}\n            />\n            <SpellbookDelete\n                spellbook={selectedSpellbook}\n                isOpen={isDeleteModalOpen}\n                onDismiss={() => {\n                    setIsDeleteModalOpen(false);\n                    setSelectedSpellbook(undefined);\n                }}\n            />\n        </>\n    );\n};\n","const favoritesKey = 'favorite-spells';\n\nexport const getFavoriteSpellSlugs = (): string[] => {\n    const rawData = localStorage.getItem(favoritesKey);\n    return rawData ? JSON.parse(rawData) : [];\n};\n\nexport const toggleFavoriteSpell = (slug: string): string[] => {\n    const favorites = getFavoriteSpellSlugs();\n    const idx = favorites.indexOf(slug);\n\n    if (idx >= 0) {\n        favorites.splice(idx, 1);\n    } else {\n        favorites.push(slug);\n    }\n\n    localStorage.setItem(favoritesKey, JSON.stringify(favorites));\n\n    return favorites;\n};\n","import {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useEffect,\n    useState,\n} from 'react';\nimport { Spell } from '../models/Spell';\nimport {\n    getFavoriteSpellSlugs,\n    toggleFavoriteSpell,\n} from '../models/SpellFavoritesRepository';\n\ninterface SpellFavoritesState {\n    favorites: string[];\n    toggleFavorite: (spell: Spell) => void;\n    isFavorite: (spell: Spell) => boolean;\n}\n\nconst SpellFavoritesContext = createContext<SpellFavoritesState | undefined>(\n    undefined\n);\n\ninterface SpellFavoritesProviderProps {\n    children?: ReactNode;\n}\n\nexport const SpellFavoritesProvider = ({\n    children,\n}: SpellFavoritesProviderProps) => {\n    const [favorites, setFavorites] = useState<string[]>([]);\n\n    useEffect(() => {\n        const slugs = getFavoriteSpellSlugs();\n        setFavorites(slugs);\n    }, []);\n\n    const isFavorite = useCallback(\n        (spell: Spell) => {\n            return favorites.includes(spell.slug);\n        },\n        [favorites]\n    );\n\n    const toggleFavorite = useCallback((spell: Spell) => {\n        const slugs = toggleFavoriteSpell(spell.slug);\n\n        setFavorites(slugs);\n    }, []);\n\n    const state = {\n        isFavorite,\n        toggleFavorite,\n        favorites,\n    };\n\n    return (\n        <SpellFavoritesContext.Provider value={state}>\n            {children}\n        </SpellFavoritesContext.Provider>\n    );\n};\n\nexport const useSpellFavorites = () => {\n    const context = useContext(SpellFavoritesContext);\n\n    if (context === undefined) {\n        throw new Error(\n            'useSpellFavorites must be used within a SpellFavoritesContextProvider'\n        );\n    }\n\n    return context;\n};\n","import { Box, Flash, Heading, StyledOcticon, Text } from '@primer/components';\nimport {\n    AlertIcon,\n    BookmarkFillIcon,\n    StarFillIcon,\n} from '@primer/octicons-react';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { useParams } from 'react-router';\nimport { getSpellSchoolColor } from '../../util/LevelStringFriendly';\nimport { getSpell } from '../../data/Spells';\nimport { useNavigation } from '../../contexts/NavigationContext';\nimport { ReactNodeArray, useCallback, useEffect } from 'react';\nimport { useSpellFavorites } from '../../contexts/SpellFavoritesContext';\nimport reactStringReplace from 'react-string-replace';\nimport styled from 'styled-components';\n\ninterface SpellPageParams {\n    slug: string;\n}\n\nconst renderPart = (label?: string, value?: string) => {\n    if (!value) {\n        return;\n    }\n\n    return (\n        <Box>\n            <Text fontWeight=\"bold\" display=\"inline\">\n                {label}:\n            </Text>\n            <Text display=\"inline\"> {value}</Text>\n        </Box>\n    );\n};\n\nconst isSpellMinorHeading = (text: string): boolean => {\n    return text.length < 24 && !text.startsWith('-') && text.endsWith('.');\n};\n\nconst isSpellListItem = (text: string): boolean => {\n    return text.startsWith('- ');\n};\n\nconst reg = /((?:\\d+)?d(?:\\d+)(?:[+-]\\d+)?)/g;\n\nconst DiceRoll = styled.span`\n    font-weight: 700;\n    color: #bdeaec;\n`;\n\nconst renderDescText = (text: string): ReactNodeArray => {\n    return reactStringReplace(text, reg, (match, i) => {\n        return <DiceRoll key={i}>{match}</DiceRoll>;\n    });\n};\n\nconst renderDescription = (description: string[]): ReactNodeArray => {\n    return description.flatMap((desc, idx) => (\n        <Text\n            mt={isSpellListItem(desc) ? 0 : 2}\n            mb={isSpellListItem(desc) ? 0 : 2}\n            key={idx}\n            fontWeight={isSpellMinorHeading(desc) ? 700 : 400}\n        >\n            {renderDescText(desc)}\n        </Text>\n    ));\n};\n\nexport const SpellPage = () => {\n    const { slug } = useParams<SpellPageParams>();\n    const spell = getSpell(slug);\n    const { setSelectedSpell } = useNavigation();\n    const { isFavorite, toggleFavorite } = useSpellFavorites();\n    const notFound = !spell;\n\n    useEffect(() => {\n        setSelectedSpell(spell);\n    }, [spell, setSelectedSpell]);\n\n    const favorite = useCallback(() => {\n        if (spell) {\n            toggleFavorite(spell);\n        }\n    }, [toggleFavorite, spell]);\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <PageHeader>\n                <PageHeader.Title\n                    icon={BookmarkFillIcon}\n                    title={notFound ? 'Not found' : spell.name}\n                />\n                {spell && (\n                    <PageHeader.Action\n                        icon={StarFillIcon}\n                        label=\"Favorite\"\n                        onClick={favorite}\n                        color={isFavorite(spell) ? '#bea262' : 'inherit'}\n                    />\n                )}\n            </PageHeader>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                mt={3}\n                ml={4}\n                mr={4}\n                mb={4}\n            >\n                {notFound ? (\n                    <Flash variant=\"danger\">\n                        <StyledOcticon icon={AlertIcon} />\n                        <Text fontWeight={400}>Spell not found</Text>\n                    </Flash>\n                ) : (\n                    <>\n                        <Heading\n                            fontSize={3}\n                            mb={3}\n                            color={getSpellSchoolColor(spell.school)}\n                        >\n                            Level {spell.level}{' '}\n                            <Text>{spell.school?.toLowerCase()}</Text>\n                        </Heading>\n                        {renderPart('Casting time', spell.castingTime)}\n                        {renderPart('Duration', spell.duration)}\n                        {renderPart('Range', spell.range)}\n                        {renderPart('Components', spell.components?.join(', '))}\n                        {renderPart(\n                            'Concentration',\n                            spell.concentration ? 'yes' : 'no'\n                        )}\n                        {renderPart('Ritual', spell.ritual ? 'yes' : 'no')}\n                        {renderPart('Classes', spell.classes.join(', '))}\n\n                        <Box\n                            display=\"flex\"\n                            flexDirection=\"column\"\n                            mt={3}\n                            mb={3}\n                        >\n                            {renderDescription(spell.description)}\n                        </Box>\n\n                        {spell.higherLevelDesc?.length! > 0 && (\n                            <>\n                                <Text fontWeight=\"bold\" display=\"inline\">\n                                    Higher level:\n                                </Text>\n                                <Box\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    mt={2}\n                                    mb={4}\n                                >\n                                    {renderDescription(spell.higherLevelDesc!)}\n                                </Box>\n                            </>\n                        )}\n                    </>\n                )}\n            </Box>\n        </Box>\n    );\n};\n","import { Box, StyledOcticon, Text, Button, themeGet } from '@primer/components';\nimport { StarFillIcon } from '@primer/octicons-react';\nimport { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { UnstyledButton } from '../../components/buttons/UnstyledButton';\nimport { useSpellbook, useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { useSpellFavorites } from '../../contexts/SpellFavoritesContext';\nimport { Spell } from '../../models/Spell';\nimport {\n    getClassNameShort,\n    getSpellSchoolColor,\n    levelFriendly,\n} from '../../util/LevelStringFriendly';\n\nconst Card = styled(Box)`\n    display: block;\n    flex: 1 1 auto;\n    color: inherit;\n    text-decoration: inherit;\n\n    &:last-child {\n        padding-right: 24px;\n    }\n\n    &:active,\n    &:hover {\n        background-color: ${themeGet('border.muted')};\n    }\n`;\n\nconst SpellButton = styled(Button)`\n    font-size: 14px;\n    padding: 4px 8px;\n`;\n\nconst AddButton = styled(SpellButton)`\n    background-color: #274779;\n    border-color: #101d29a8;\n`;\n\nconst RemoveButton = styled(SpellButton)`\n    background-color: #373e47;\n    border-color: #0f1c29a1;\n`;\n\nconst FavoriteButton = styled(UnstyledButton)``;\n\ninterface SpellRowProps {\n    spell: Spell;\n}\n\nexport const SpellRow = ({ spell }: SpellRowProps) => {\n    const spellbook = useSpellbook();\n    const { saveSpellbook } = useSpellbooks();\n    const { isFavorite, toggleFavorite } = useSpellFavorites();\n    const mods = [];\n\n    const isFav = isFavorite(spell);\n    const toggleFav = useCallback(() => {\n        toggleFavorite(spell);\n    }, [spell, toggleFavorite]);\n\n    if (spell.ritual) {\n        mods.push('rit');\n    }\n\n    if (spell.concentration) {\n        mods.push('con');\n    }\n\n    const inSpellbook = (spell: Spell): boolean => {\n        return spellbook!.spells.some((s) => s.name === spell.name);\n    };\n\n    return (\n        <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            borderBottom=\"1px solid #343940\"\n            p={3}\n        >\n            <Box display=\"flex\" justifyContent=\"space-between\">\n                <Card as={Link} to={`/spell/${spell.slug}`} display=\"block\">\n                    <Text fontSize={2} fontWeight={600}>\n                        {spell.name}\n                    </Text>\n                    <Box>\n                        <Text fontSize={1}>\n                            {levelFriendly(spell.level)} level\n                            <Text color={getSpellSchoolColor(spell.school)}>\n                                {' ' + spell.school.toLowerCase()}\n                            </Text>\n                            <Text color=\"#6e7b8a\">\n                                {' [' + spell.components.join(', ')}]\n                            </Text>\n                        </Text>\n                    </Box>\n                </Card>\n                {spellbook && (\n                    <Box pl={3}>\n                        {inSpellbook(spell) ? (\n                            <RemoveButton\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    e.preventDefault();\n\n                                    const idx = spellbook.spells.findIndex(\n                                        (s) => s.name === spell.name\n                                    );\n                                    spellbook.spells.splice(idx, 1);\n                                    saveSpellbook(spellbook);\n                                }}\n                            >\n                                Remove\n                            </RemoveButton>\n                        ) : (\n                            <AddButton\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    e.preventDefault();\n\n                                    spellbook.spells.push(spell);\n                                    saveSpellbook(spellbook);\n                                }}\n                            >\n                                Add\n                            </AddButton>\n                        )}\n                    </Box>\n                )}\n            </Box>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n                <Text fontSize={1} color=\"#6e7b8a\">\n                    {spell.classes.map((c) => getClassNameShort(c)).join('/')}\n                </Text>\n                {/* {mods.length > 0 && (\n                    <Text fontSize={1} color=\"#6e7b8a\">\n                        ({mods.join(', ')})\n                    </Text>\n                )} */}\n                <FavoriteButton onClick={toggleFav}>\n                    <StyledOcticon\n                        icon={StarFillIcon}\n                        size={18}\n                        mr={2}\n                        color={isFav ? '#bea262' : '#353c45'}\n                    />\n                </FavoriteButton>\n            </Box>\n        </Box>\n    );\n};\n","import { useCallback, useEffect, useRef } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport styled from 'styled-components';\nimport { Spell } from '../../models/Spell';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { SpellRow } from './SpellRow';\nimport { useNavigation } from '../../contexts/NavigationContext';\n\ninterface RowProps {\n    index: number;\n    style: any;\n    data: Spell[];\n}\n\nconst Row = ({ index, style, data }: RowProps) => {\n    const spell = data[index];\n\n    return (\n        <div style={style}>\n            <SpellRow spell={spell} />\n        </div>\n    );\n};\n\ninterface InfiniteSpellListProps {\n    spells: Spell[];\n    selectedSpell?: Spell;\n}\n\nconst SpellListContainer = styled.div`\n    height: 100%;\n`;\n\nexport const InfiniteSpellList = ({\n    spells,\n    selectedSpell,\n}: InfiniteSpellListProps) => {\n    const containerRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n    const listRef = useRef() as React.MutableRefObject<FixedSizeList>;\n    const { width, height } = useResizeDetector({ targetRef: containerRef });\n    const { scrollOffset, setScrollOffset } = useNavigation();\n\n    useEffect(() => {\n        if (selectedSpell) {\n            const selectedIdx = spells.findIndex(\n                (s) => s.slug === selectedSpell.slug\n            );\n\n            if (selectedIdx > 0 && scrollOffset) {\n                listRef.current?.scrollTo(scrollOffset);\n            }\n        }\n    }, [selectedSpell, scrollOffset, spells]);\n\n    const handleScroll = useCallback(\n        (e) => {\n            if (e.scrollOffset !== scrollOffset && e.scrollOffset > 0) {\n                setScrollOffset(e.scrollOffset);\n            }\n        },\n        [scrollOffset, setScrollOffset]\n    );\n\n    return (\n        <SpellListContainer ref={containerRef}>\n            <FixedSizeList\n                // @ts-ignore\n                ref={listRef}\n                onScroll={handleScroll}\n                width={width ?? 320}\n                height={height ?? 300}\n                itemCount={spells.length}\n                itemData={spells}\n                itemSize={102}\n            >\n                {Row}\n            </FixedSizeList>\n        </SpellListContainer>\n    );\n};\n","import { themeGet } from '@primer/components';\nimport styled from 'styled-components';\nimport { Screen } from './Screen';\n\nconst DrawerContent = styled.div<{ isOpen: boolean }>`\n    background-color: ${themeGet('colors.canvas.inset')};\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    height: 100%;\n    max-width: 320px;\n    width: 90%;\n    box-shadow: rgb(10 11 13) 0px 8px 24px\n\n    transition: right 0.15s ease;\n\n    right: ${({ isOpen }) => (isOpen ? '0' : '-100%')};\n`;\n\ninterface DrawerProps {\n    children?: React.ReactNode;\n    isOpen: boolean;\n    onDismiss: () => void;\n}\n\nexport const Drawer = ({ children, isOpen, onDismiss }: DrawerProps) => (\n    <>\n        <Screen isOpen={isOpen} onDismiss={onDismiss} />\n        <DrawerContent isOpen={isOpen}>{children}</DrawerContent>\n    </>\n);\n","import {\n    createContext,\n    ReactNode,\n    useCallback,\n    useContext,\n    useState,\n} from 'react';\nimport { Spell } from '../models/Spell';\nimport { useSpellFavorites } from './SpellFavoritesContext';\n\ninterface SpellSearchState {\n    textFilter: string;\n    classFilter: Set<string>;\n    levelFilter: Set<number>;\n    favoritesFilter: boolean;\n\n    addClass: (playerClass: string) => void;\n    removeClass: (playerClass: string) => void;\n\n    addLevel: (level: number) => void;\n    removeLevel: (level: number) => void;\n\n    setTextFilter: (text: string) => void;\n\n    hasClassFilter: () => boolean;\n    hasLevelFilter: () => boolean;\n    hasTextFilter: () => boolean;\n    hasFilter: () => boolean;\n\n    apply: (spells?: Spell[]) => Spell[];\n\n    setClassFilter: (playerClasses: string[]) => void;\n\n    toggleFavoritesFilter: () => void;\n\n    clear: () => void;\n}\n\nconst SpellSearchContext = createContext<SpellSearchState | undefined>(\n    undefined\n);\n\ninterface SpellSearchProviderProps {\n    children?: ReactNode;\n}\n\nexport const SpellSearchProvider = ({ children }: SpellSearchProviderProps) => {\n    const [textFilter, setTextFilter] = useState('');\n    const [classFilter, setClassFilterState] = useState(new Set<string>());\n    const [levelFilter, setLevelFilter] = useState(new Set<number>());\n    const [favoritesFilter, setFavoritesFilter] = useState(false);\n    const { favorites } = useSpellFavorites();\n\n    const clear = useCallback(() => {\n        setTextFilter('');\n        setClassFilterState(new Set());\n        setLevelFilter(new Set());\n        setFavoritesFilter(false);\n    }, []);\n\n    const addClass = (playerClass: string) => {\n        const newClassFilter = new Set(classFilter);\n        newClassFilter.add(playerClass);\n        setClassFilterState(newClassFilter);\n    };\n\n    const toggleFavoritesFilter = useCallback(() => {\n        setFavoritesFilter(!favoritesFilter);\n    }, [favoritesFilter, setFavoritesFilter]);\n\n    const setClassFilter = useCallback((playerClasses: string[]) => {\n        const newClassFilter = new Set(playerClasses);\n        setClassFilterState(newClassFilter);\n    }, []);\n\n    const removeClass = useCallback(\n        (playerClass: string) => {\n            const newClassFilter = new Set(classFilter);\n            newClassFilter.delete(playerClass);\n            setClassFilterState(newClassFilter);\n        },\n        [classFilter]\n    );\n\n    const addLevel = useCallback(\n        (level: number) => {\n            const newLevelFilter = new Set(levelFilter);\n            newLevelFilter.add(level);\n            setLevelFilter(newLevelFilter);\n        },\n        [levelFilter]\n    );\n\n    const removeLevel = useCallback(\n        (level: number) => {\n            const newLevelFilter = new Set(levelFilter);\n            newLevelFilter.delete(level);\n            setLevelFilter(newLevelFilter);\n        },\n        [levelFilter]\n    );\n\n    const hasClassFilter = () => classFilter.size > 0;\n    const hasLevelFilter = () => levelFilter.size > 0;\n    const hasTextFilter = () => textFilter.length > 0;\n    const hasFilter = () =>\n        hasClassFilter() || hasLevelFilter() || hasTextFilter();\n\n    const apply = (spells?: Spell[]): Spell[] => {\n        const textFilterLower = textFilter.toLowerCase();\n\n        return (\n            spells?.filter((s: Spell) => {\n                if (hasTextFilter()) {\n                    if (!s.name.toLowerCase().includes(textFilterLower)) {\n                        return false;\n                    }\n                }\n                if (hasClassFilter()) {\n                    if (\n                        !s.classes.some((c) => classFilter.has(c.toLowerCase()))\n                    ) {\n                        return false;\n                    }\n                }\n                if (hasLevelFilter()) {\n                    if (!levelFilter.has(s.level)) {\n                        return false;\n                    }\n                }\n                if (favoritesFilter) {\n                    if (!favorites.includes(s.slug)) {\n                        return false;\n                    }\n                }\n                return true;\n            }) || []\n        );\n    };\n\n    const state: SpellSearchState = {\n        favoritesFilter,\n        textFilter,\n        classFilter,\n        levelFilter,\n        addClass,\n        removeClass,\n        addLevel,\n        removeLevel,\n        setTextFilter,\n        hasClassFilter,\n        hasLevelFilter,\n        hasTextFilter,\n        hasFilter,\n        toggleFavoritesFilter,\n        apply,\n        setClassFilter,\n        clear,\n    };\n\n    return (\n        <SpellSearchContext.Provider value={state}>\n            {children}\n        </SpellSearchContext.Provider>\n    );\n};\n\nexport const useSpellSearch = () => {\n    const context = useContext(SpellSearchContext);\n\n    if (context === undefined) {\n        throw new Error(\n            'useSpellSearch must be used within a SpellSearchProvider'\n        );\n    }\n\n    return context;\n};\n","import {\n    Box,\n    Heading,\n    StyledOcticon,\n    Text,\n    TextInput,\n    themeGet,\n} from '@primer/components';\nimport { SearchIcon, XIcon } from '@primer/octicons-react';\nimport { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { UnstyledButton } from '../../components/buttons/UnstyledButton';\nimport { useSpellSearch } from '../../contexts/SpellSearchContext';\nimport {\n    levelFriendly,\n    capitalizeFirstLetter,\n} from '../../util/LevelStringFriendly';\nimport { playerClasses } from '../../data/PlayerClasses';\n\nconst TitleBar = styled(Heading)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #171c23;\n`;\n\nconst CloseButton = styled(UnstyledButton)`\n    padding: 8px;\n\n    &:active {\n        background-color: ${themeGet('colors.canvas.subtle')};\n    }\n`;\n\nconst ClassGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 8px;\n    height: 240px;\n    grid-row-gap: 8px;\n    margin-bottom: 16px;\n`;\n\nconst SpellLevelGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: 8px;\n    height: 180px;\n    grid-row-gap: 8px;\n`;\n\ninterface ClassCellProps {\n    isSelected: boolean;\n}\n\nconst ClassCell = styled.button<ClassCellProps>`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n\n    background-color: ${themeGet('colors.canvas.subtle')};\n    border: 3px solid transparent;\n    border-color: ${({ isSelected }) =>\n        isSelected ? themeGet('colors.accent.emphasis') : 'transparent'};\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.25rem;\n`;\n\nconst SpellLevelCell = styled.button<ClassCellProps>`\n    display: inline-block;\n    text-decoration: none;\n    color: inherit;\n    background: none;\n    padding: 0;\n    font: inherit;\n    outline: inherit;\n\n    background-color: ${themeGet('colors.canvas.subtle')};\n    border: 3px solid transparent;\n\n    border-color: ${({ isSelected }) =>\n        isSelected ? themeGet('colors.accent.emphasis') : 'transparent'};\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.25rem;\n`;\n\nconst spellLevels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\ninterface SpellsListFilterProps {\n    onDismiss: () => void;\n}\n\nexport const SpellsListFilter = ({ onDismiss }: SpellsListFilterProps) => {\n    const {\n        classFilter,\n        addClass,\n        removeClass,\n        levelFilter,\n        addLevel,\n        removeLevel,\n        textFilter,\n        setTextFilter,\n    } = useSpellSearch();\n\n    const isClassSelected = useCallback(\n        (className: string) => classFilter.has(className),\n        [classFilter]\n    );\n    const isLevelSelected = useCallback(\n        (level: number) => levelFilter.has(level),\n        [levelFilter]\n    );\n\n    const handleTextFilterChange = useCallback(\n        (e: any) => {\n            setTextFilter(e.target.value);\n        },\n        [setTextFilter]\n    );\n\n    const toggleClass = (className: string) => () => {\n        if (isClassSelected(className)) {\n            removeClass(className);\n        } else {\n            addClass(className);\n        }\n    };\n\n    const toggleLevel = (level: number) => () => {\n        if (isLevelSelected(level)) {\n            removeLevel(level);\n        } else {\n            addLevel(level);\n        }\n    };\n\n    return (\n        <Box overflow=\"auto\" height=\"100%\">\n            <TitleBar p={2} as=\"h3\" fontSize={2}>\n                <Text p={2}>\n                    <StyledOcticon icon={SearchIcon} size={18} mr={1} />\n                    Filter\n                </Text>\n                <CloseButton onClick={onDismiss}>\n                    <StyledOcticon icon={XIcon} size={32} />\n                </CloseButton>\n            </TitleBar>\n            <Box p={3}>\n                <Box mb={3}>\n                    <TextInput\n                        icon={SearchIcon}\n                        aria-label=\"Spell name\"\n                        name=\"spell-name\"\n                        placeholder=\"Search spells\"\n                        value={textFilter}\n                        onChange={handleTextFilterChange}\n                        width=\"100%\"\n                    />\n                </Box>\n                <Text pb={2} display=\"block\" fontWeight=\"600\">\n                    Class\n                </Text>\n                <ClassGrid>\n                    {playerClasses.map((playerClass) => (\n                        <ClassCell\n                            key={playerClass}\n                            isSelected={isClassSelected(playerClass)}\n                            onClick={toggleClass(playerClass)}\n                        >\n                            {capitalizeFirstLetter(playerClass)}\n                        </ClassCell>\n                    ))}\n                </ClassGrid>\n                <Text pb={2} display=\"block\" fontWeight=\"600\">\n                    Spell level\n                </Text>\n                <SpellLevelGrid>\n                    {spellLevels.map((spellLevel) => (\n                        <SpellLevelCell\n                            key={spellLevel}\n                            isSelected={isLevelSelected(spellLevel)}\n                            onClick={toggleLevel(spellLevel)}\n                        >\n                            {levelFriendly(spellLevel)}\n                        </SpellLevelCell>\n                    ))}\n                </SpellLevelGrid>\n            </Box>\n        </Box>\n    );\n};\n","import { Box, useTheme } from '@primer/components';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { useCallback, useEffect, useState } from 'react';\nimport { RepoIcon, SearchIcon, StarFillIcon } from '@primer/octicons-react';\nimport { InfiniteSpellList } from './InfiniteSpellList';\nimport { Drawer } from '../../components/Drawer';\nimport { SpellsListFilter } from './SpellsListFilter';\nimport { useSpellSearch } from '../../contexts/SpellSearchContext';\nimport { useSpellbook } from '../../contexts/SpellbooksContext';\nimport { getSpells } from '../../data/Spells';\nimport { useNavigation } from '../../contexts/NavigationContext';\n\nexport const SpellListPage = () => {\n    const data = getSpells();\n    const spellbook = useSpellbook();\n    const filter = useSpellSearch();\n    const [isFilterDrawerOpen, setIsFilterDrawerOpen] = useState(false);\n    const spells = filter.apply(data).sort((s1, s2) => s1.level - s2.level);\n    const { theme } = useTheme();\n    const { selectedSpell } = useNavigation();\n\n    useEffect(() => {\n        if (spellbook) {\n            filter.clear();\n            filter.setClassFilter(spellbook.classes);\n        } else if (!selectedSpell) {\n            filter.clear();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [spellbook, selectedSpell]);\n\n    const showFilter = useCallback(() => {\n        setIsFilterDrawerOpen(true);\n    }, [setIsFilterDrawerOpen]);\n\n    const hideDrawer = useCallback(() => {\n        setIsFilterDrawerOpen(false);\n    }, [setIsFilterDrawerOpen]);\n\n    return (\n        <>\n            <PageHeader>\n                <PageHeader.Title icon={RepoIcon} title=\"Spells\" />\n                <PageHeader.Action\n                    icon={StarFillIcon}\n                    label=\"favorites\"\n                    onClick={filter.toggleFavoritesFilter}\n                    color={filter.favoritesFilter ? '#bea262' : 'inherit'}\n                />\n                <PageHeader.Action\n                    icon={SearchIcon}\n                    label=\"search\"\n                    onClick={showFilter}\n                    color={\n                        filter.hasFilter()\n                            ? theme?.colors.accent.emphasis\n                            : 'inherit'\n                    }\n                />\n            </PageHeader>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex=\"1 1 auto\"\n                height=\"100%\"\n            >\n                <InfiniteSpellList\n                    spells={spells}\n                    selectedSpell={selectedSpell}\n                />\n                <Drawer isOpen={isFilterDrawerOpen} onDismiss={hideDrawer}>\n                    <SpellsListFilter onDismiss={hideDrawer} />\n                </Drawer>\n            </Box>\n        </>\n    );\n};\n","import { Box, Flash, StyledOcticon, Text } from '@primer/components';\nimport {\n    AlertIcon,\n    PlusIcon,\n    RepoIcon,\n    StarFillIcon,\n} from '@primer/octicons-react';\nimport { useCallback, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { useSpellbooks } from '../../contexts/SpellbooksContext';\nimport { useSpellSearch } from '../../contexts/SpellSearchContext';\nimport { PageHeader } from '../../layout/PageHeader';\nimport { SpellRow } from '../spells/SpellRow';\n\ninterface SpellbookPageParams {\n    spellbookId: string;\n}\n\nexport const SpellbookPage = () => {\n    const { spellbookId } = useParams<SpellbookPageParams>();\n    const { getSpellbookById } = useSpellbooks();\n    const history = useHistory();\n    const spellbook = getSpellbookById(spellbookId);\n    const filter = useSpellSearch();\n\n    useEffect(() => {\n        filter.clear();\n    }, []);\n\n    const goToAddSpellsPage = useCallback(() => {\n        history.push(`/spellbook/${spellbookId}/add`);\n    }, [history, spellbookId]);\n\n    const spells = filter.apply(spellbook?.spells);\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\">\n            <PageHeader>\n                <PageHeader.Title\n                    icon={RepoIcon}\n                    title={spellbook?.name ?? 'Unknown'}\n                />\n                <PageHeader.Action\n                    icon={StarFillIcon}\n                    label=\"Favorites\"\n                    onClick={filter.toggleFavoritesFilter}\n                    color={filter.favoritesFilter ? '#bea262' : 'inherit'}\n                />\n                <PageHeader.Action\n                    icon={PlusIcon}\n                    label=\"Add spell\"\n                    onClick={goToAddSpellsPage}\n                />\n            </PageHeader>\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex=\"1 1 auto\"\n                overflow=\"auto\"\n            >\n                {spellbook ? (\n                    <Box>\n                        {spells.map((spell) => (\n                            <SpellRow key={spell.name} spell={spell} />\n                        ))}\n                        {spellbook.spells.length <= 0 && (\n                            <Box\n                                pt={5}\n                                pl={3}\n                                pr={3}\n                                display=\"flex\"\n                                justifyContent=\"center\"\n                            >\n                                <Text\n                                    textAlign=\"center\"\n                                    fontSize={3}\n                                    color=\"#3c4147\"\n                                >\n                                    This spellbook is empty.\n                                </Text>\n                            </Box>\n                        )}\n                    </Box>\n                ) : (\n                    <Flash variant=\"danger\">\n                        <StyledOcticon icon={AlertIcon} />\n                        <Text fontWeight={400}>\n                            Spellbook \"{spellbookId}\" not found\n                        </Text>\n                    </Flash>\n                )}\n            </Box>\n        </Box>\n    );\n};\n","import { Box } from '@primer/components';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { AppHeader } from '../layout/AppHeader';\nimport { HomePage } from './home/HomePage';\nimport { SpellbookListPage } from './spellbooks/SpellbookListPage';\nimport { SpellPage } from './spells/SpellPage';\nimport { SpellListPage } from './spells/SpellListPage';\nimport { SpellbookPage } from './spellbooks/SpellbookPage';\n\nexport const Routes = () => (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AppHeader />\n        <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            overflowY=\"auto\"\n            height=\"100%\"\n        >\n            <Switch>\n                <Route path=\"/spells\">\n                    <SpellListPage />\n                </Route>\n                <Route path=\"/spell/:slug\">\n                    <SpellPage />\n                </Route>\n                <Route path=\"/spellbooks\">\n                    <SpellbookListPage />\n                </Route>\n                <Route path=\"/spellbook/:spellbookId/add\">\n                    <SpellListPage />\n                </Route>\n                <Route path=\"/spellbook/:spellbookId\">\n                    <SpellbookPage />\n                </Route>\n                <Route>\n                    <HomePage />\n                </Route>\n            </Switch>\n        </Box>\n    </BrowserRouter>\n);\n","import React from 'react';\nimport { ThemeProvider } from '@primer/components';\n\ninterface AppThemeProviderProps {\n    children?: React.ReactNode;\n}\n\nexport const AppThemeProvider = ({ children }: AppThemeProviderProps) => (\n    <ThemeProvider colorMode=\"night\" nightScheme=\"dark_dimmed\">\n        {children}\n    </ThemeProvider>\n);\n","import React from 'react';\nimport { BaseStyles, Box } from '@primer/components';\nimport { GraphProvider } from './gql/GraphProvider';\nimport { Routes } from './pages/Routes';\nimport { AppThemeProvider } from './layout/AppThemeProvider';\nimport styled from 'styled-components';\nimport { SpellSearchProvider } from './contexts/SpellSearchContext';\nimport { SpellbooksProvider } from './contexts/SpellbooksContext';\nimport { NavigationProvider } from './contexts/NavigationContext';\nimport { SpellFavoritesProvider } from './contexts/SpellFavoritesContext';\n\nconst Base = styled(BaseStyles)`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    position: relative;\n`;\n\nexport const App = () => (\n    <AppThemeProvider>\n        <GraphProvider>\n            <SpellbooksProvider>\n                <SpellFavoritesProvider>\n                    <SpellSearchProvider>\n                        <NavigationProvider>\n                            <Box height=\"100%\" bg=\"bg.primary\" overflowY=\"auto\">\n                                <Base>\n                                    <Routes />\n                                </Base>\n                            </Box>\n                        </NavigationProvider>\n                    </SpellSearchProvider>\n                </SpellFavoritesProvider>\n            </SpellbooksProvider>\n        </GraphProvider>\n    </AppThemeProvider>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}